{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from \"vue\";\nimport ModalPopup from \"@/components/SingleButtonModal.vue\";\nimport { useRegionsStore } from \"@/stores/useRegionsStore\";\nexport default {\n  name: \"IndividualUserProfile\",\n  components: {\n    ModalPopup\n  },\n  setup() {\n    const regionsStore = useRegionsStore();\n    const selectedProvince = ref('');\n    const selectedCity = ref('');\n    const provinces = computed(() => regionsStore.getProvinces);\n    const allCities = computed(() => regionsStore.getCitiesByProvince(selectedProvince.value));\n    const filteredCities = computed(() => {\n      return selectedProvince.value ? allCities.value : [];\n    });\n    const modalPopupStatue = ref(false);\n\n    // 경력 여부와 직종\n    const careerStatus = ref(\"none\"); // 'none', 'yes', 'no' 중 선택\n    // todo 직종 리스트 받는 api로 값전 달하기\n    const jobCategories = ref([\"개발자\", \"디자이너\", \"마케터\", \"영업\", \"기획자\", \"기타\"]);\n    const isJobCategoryEnabled = computed(() => careerStatus.value === \"yes\");\n    const selectedJobs = ref([\"\"]);\n    const selectedInterestJobs = ref([\"\"]);\n    const addJobField = () => {\n      if (selectedJobs.value.length < 3) {\n        selectedJobs.value.push(\"\");\n      }\n    };\n    const removeJobField = index => {\n      selectedJobs.value.splice(index, 1);\n    };\n    const addInterestJobField = () => {\n      if (selectedInterestJobs.value.length < 3) {\n        selectedInterestJobs.value.push(\"\");\n      }\n    };\n    const removeInterestJobField = index => {\n      selectedInterestJobs.value.splice(index, 1);\n    };\n    const onUpdateProfilerClick = () => {\n      modalPopupStatue.value = true;\n    };\n    return {\n      modalPopupStatue,\n      selectedProvince,\n      selectedCity,\n      provinces,\n      filteredCities,\n      careerStatus,\n      jobCategories,\n      isJobCategoryEnabled,\n      selectedJobs,\n      selectedInterestJobs,\n      addJobField,\n      removeJobField,\n      addInterestJobField,\n      removeInterestJobField,\n      onUpdateProfilerClick\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","ModalPopup","useRegionsStore","name","components","setup","regionsStore","selectedProvince","selectedCity","provinces","getProvinces","allCities","getCitiesByProvince","value","filteredCities","modalPopupStatue","careerStatus","jobCategories","isJobCategoryEnabled","selectedJobs","selectedInterestJobs","addJobField","length","push","removeJobField","index","splice","addInterestJobField","removeInterestJobField","onUpdateProfilerClick"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/IndividualUserProfile.vue"],"sourcesContent":["<script>\nimport { ref, computed } from \"vue\";\nimport ModalPopup from \"@/components/SingleButtonModal.vue\";\nimport { useRegionsStore } from \"@/stores/useRegionsStore\";\nexport default {\n  name: \"IndividualUserProfile\",\n  components: { ModalPopup },\n  setup() {\n    const  regionsStore = useRegionsStore();\n\n    const selectedProvince = ref('');\n    const selectedCity = ref('');\n\n    const provinces = computed(() => regionsStore.getProvinces);\n    const allCities = computed(() => regionsStore.getCitiesByProvince(selectedProvince.value));\n\n    const filteredCities = computed(() => {\n      return selectedProvince.value ? allCities.value : [];\n    });\n\n    const modalPopupStatue = ref(false);\n\n    // 경력 여부와 직종\n    const careerStatus = ref(\"none\"); // 'none', 'yes', 'no' 중 선택\n    // todo 직종 리스트 받는 api로 값전 달하기\n    const jobCategories = ref([\n      \"개발자\", \"디자이너\", \"마케터\", \"영업\", \"기획자\", \"기타\"\n    ]);\n\n    const isJobCategoryEnabled = computed(() => careerStatus.value === \"yes\");\n\n    const selectedJobs = ref([\"\"]);\n    const selectedInterestJobs = ref([\"\"]);\n\n    const addJobField = () => {\n      if (selectedJobs.value.length < 3) {\n        selectedJobs.value.push(\"\");\n      }\n    };\n\n    const removeJobField = (index) => {\n      selectedJobs.value.splice(index, 1);\n    };\n\n    const addInterestJobField = () => {\n      if (selectedInterestJobs.value.length < 3) {\n        selectedInterestJobs.value.push(\"\");\n      }\n    };\n\n    const removeInterestJobField = (index) => {\n      selectedInterestJobs.value.splice(index, 1);\n    };\n\n    const onUpdateProfilerClick = () => {\n      modalPopupStatue.value = true;\n    }\n\n    return {\n      modalPopupStatue,\n      selectedProvince,\n      selectedCity,\n      provinces,\n      filteredCities,\n      careerStatus,\n      jobCategories,\n      isJobCategoryEnabled,\n      selectedJobs,\n      selectedInterestJobs,\n      addJobField,\n      removeJobField,\n      addInterestJobField,\n      removeInterestJobField,\n      onUpdateProfilerClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">회원가입</div>\n    <div class=\"subtitle\">개인정보 수정</div>\n    <div class=\"content\">\n      <!-- 이름 입력  -->\n      <div class=\"input-section\">\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <input class=\"input-field\" placeholder=\"이름\">\n        </div>\n        <!-- 휴대폰번호 입력 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <input class=\"input-field\" placeholder=\"휴대폰 번호\" type=\"tel\">\n        </div>\n        <!-- 성별 선택 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <select class=\"input-field\" aria-label=\"성별 선택\">\n            <option value=\"\" disabled selected>성별</option>\n            <option value=\"male\">남성</option>\n            <option value=\"female\">여성</option>\n          </select>\n        </div>\n        <!-- 거주 도 선택 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <select v-model=\"selectedProvince\" class=\"input-field\" aria-label=\"거주 도\">\n            <option value=\"\" disabled selected>거주 도</option>\n            <option v-for=\"province in provinces\" :key=\"province\" :value=\"province\">{{ province }}</option>\n          </select>\n        </div>\n        <!-- 거주 시 선택 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <select class=\"input-field\" aria-label=\"거주 시\">\n            <option value=\"\" disabled selected>거주 시</option>\n            <option v-for=\"city in filteredCities\" :key=\"city\" :value=\"city\">{{ city }}</option>\n          </select>\n        </div>\n        <!-- 경력 여부 선택 -->\n        <div class=\"input-label\" style=\"padding-top: 10px;\">\n          <span class=\"required\">*</span>\n          <span class=\"bold-text\">경력 여부</span>\n          <label><input type=\"radio\" v-model=\"careerStatus\" value=\"yes\"> 있음</label>\n          <label><input type=\"radio\" v-model=\"careerStatus\" value=\"no\"> 없음</label>\n        </div>\n        <!-- 직종 선택 -->\n        <div v-if=\"isJobCategoryEnabled\" class=\"input-label job-category-section\" >\n          <div v-for=\"(job, index) in selectedJobs\" :key=\"index\" class=\"job-category\">\n            <div class=\"select-wrapper\">\n              <select v-model=\"selectedJobs[index]\" class=\"input-field\" aria-label=\"직종 선택\">\n                <option value=\"\" disabled selected>직종 선택</option>\n                <option v-for=\"job in jobCategories\" :key=\"job\" :value=\"job\">{{ job }}</option>\n              </select>\n            </div>\n            <div class=\"button-wrapper\">\n              <div v-if=\"index === selectedJobs.length - 1 && selectedJobs.length < 3\" @click=\"addJobField\" class=\"icon-button add-button\">\n                <img src=\"@/assets/images/icons/plus.png\" alt=\"추가\">\n              </div>\n              <div v-if=\"index > 0 && index === selectedJobs.length - 1\" @click=\"removeJobField(index)\" class=\"icon-button remove-button\">\n                <img src=\"@/assets/images/icons/minus.png\" alt=\"제거\">\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- 관심 직종 선택 -->\n        <div class=\"input-label\" style=\"padding-top: 15px;\">\n          <span class=\"bold-text\" style=\"margin-left: 25px\">관심 직종</span>\n          <span class=\"small-text\">* 관심 직종 등록 시 우바 고도가 올라갑니다.</span>\n        </div>\n        <div v-for=\"(interestJob, index) in selectedInterestJobs\" :key=\"index\" class=\"job-category\">\n          <div class=\"select-wrapper\">\n            <select v-model=\"selectedInterestJobs[index]\" class=\"input-field\" aria-label=\"관심 직종 선택\">\n              <option value=\"\" disabled selected>관심 직종 선택</option>\n              <option v-for=\"job in jobCategories\" :key=\"job\" :value=\"job\">{{ job }}</option>\n            </select>\n          </div>\n          <div class=\"button-wrapper\">\n            <div v-if=\"index === selectedInterestJobs.length - 1 && selectedInterestJobs.length < 3\" @click=\"addInterestJobField\" class=\"icon-button add-button\">\n              <img src=\"@/assets/images/icons/plus.png\" alt=\"추가\">\n            </div>\n            <div v-if=\"index > 0 && index === selectedInterestJobs.length - 1\" @click=\"removeInterestJobField(index)\" class=\"icon-button remove-button\">\n              <img src=\"@/assets/images/icons/minus.png\" alt=\"제거\">\n            </div>\n          </div>\n        </div>\n        <div class=\"find-password-button\" @click=\"onUpdateProfilerClick\">수정하기</div>\n        <div class=\"delete-button\">탈퇴하기</div>\n      </div>\n    </div>\n  </main>\n  <modal-popup\n      v-if=\"modalPopupStatue\"\n      @close-modal=\"modalPopupStatue = false\"\n      :modal-message=\"'수정이 완료되었습니다.'\"\n      :router-path=\"''\"\n  />\n</template>\n\n<style scoped>\n.body {\n  flex: 1;                      /* 가변 영역, 헤더와 바텀 내비게이션을 제외한 나머지 공간 차지 */\n  padding: 20px;                /* 내부 여백 */\n  box-sizing: border-box;       /* 패딩을 포함한 크기 계산 */\n  background-color: #f8f9fa;    /* 배경색 */\n  overflow-y: auto;             /* 내용이 넘칠 경우 스크롤 가능 */\n}\n\n.header {\n  font-size: 24px;              /* 헤더 폰트 크기 */\n  font-weight: bold;            /* 헤더 두껍게 */\n  margin-bottom: 20px;          /* 아래쪽 여백 */\n}\n\n.subtitle {                     /* 소제목 스타일 */\n  font-size: 18px;              /* 글자 크기 */\n  font-weight: bold;            /* 글자 두께 */\n  margin-bottom: 10px;          /* 아래쪽 여백 */\n  color: #333;                  /* 텍스트 색상 */\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between; /* 콘텐츠와 요소를 공간을 균등하게 분배 */\n  height: 100%; /* 전체 높이를 사용하도록 설정 */\n}\n\n.input-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  flex: 1; /* 가변적으로 공간을 차지하도록 설정 */\n}\n\n.input-label {\n  display: flex; /* 수평 정렬 */\n  align-items: center; /* 세로 중앙 정렬 */\n  width: 100%;\n}\n\n.bold-text {\n  font-weight: bold; /* 글씨체를 굵게 설정 */\n  margin-left: 13px;\n}\n\n.small-text {\n  font-size: 12px; /* 작은 텍스트의 크기 설정 */\n  color: #6c757d; /* 적절한 색상 설정 (예: 회색) */\n  margin-left: 15px; /* 왼쪽 여백 추가 (bold-text와 정렬) */\n}\n\ninput[type=\"radio\"] {\n  margin-left: 13px;\n}\n\n.input-field {\n  width: 100%; /* 너비를 100%로 설정하여 부모 요소의 전체 너비를 차지 */\n  padding: 10px;\n  margin: 10px 10px;\n  box-sizing: border-box;\n  font-size: 16px;\n  border-radius: 12px;\n  border: 1px solid #e1e1e1;\n  color: #413F42;\n}\n\n.required {\n  color: #F60F0F; /* 필수 입력 사항 색상 */\n  margin-right: 5px; /* 입력 필드와의 간격 */\n}\n\n.find-password-button {\n  width: 90%;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: #024CAA;\n  color: white;\n  text-align: center;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 8px;\n}\n\n.job-category-section {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.job-category {\n  display: flex; /* 수평 정렬 */\n  align-items: center; /* 세로 중앙 정렬 */\n  justify-content: space-between; /* 좌우 간격을 균등하게 */\n  margin-top: 10px;\n  height: 50px; /* 고정 높이 */\n  width: 100%;\n  margin-left: 22px;\n}\n\n.select-wrapper {\n  flex: 1; /* select 필드가 가로 공간을 차지하도록 설정 */\n  margin-right: 10px; /* 오른쪽 여백 추가 */\n}\n\n.button-wrapper {\n  display: flex;\n  align-items: center;\n  width: 80px;\n\n}\n\n.icon-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  margin-left: 5px;\n}\n\n.add-button img,\n.remove-button img {\n  width: 24px;\n  height: 24px;\n}\n\n.add-button {\n  background-color: #e0f7fa;\n  border-radius: 50%;\n}\n\n.remove-button {\n  background-color: #ffebee;\n  border-radius: 50%;\n}\n\n.delete-button {\n  margin-top: 30px; /* 수정하기 버튼과의 간격을 조정 */\n  color: #6c757d; /* 회색 텍스트 색상 */\n  cursor: pointer; /* 포인터 커서 추가 */\n  font-size: 10pt;\n  align-self: flex-start; /* 왼쪽 정렬 */\n}\n</style>"],"mappings":";AACA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,OAAOC,UAAS,MAAO,oCAAoC;AAC3D,SAASC,eAAc,QAAS,0BAA0B;AAC1D,eAAe;EACbC,IAAI,EAAE,uBAAuB;EAC7BC,UAAU,EAAE;IAAEH;EAAW,CAAC;EAC1BI,KAAKA,CAAA,EAAG;IACN,MAAOC,YAAW,GAAIJ,eAAe,CAAC,CAAC;IAEvC,MAAMK,gBAAe,GAAIR,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMS,YAAW,GAAIT,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMU,SAAQ,GAAIT,QAAQ,CAAC,MAAMM,YAAY,CAACI,YAAY,CAAC;IAC3D,MAAMC,SAAQ,GAAIX,QAAQ,CAAC,MAAMM,YAAY,CAACM,mBAAmB,CAACL,gBAAgB,CAACM,KAAK,CAAC,CAAC;IAE1F,MAAMC,cAAa,GAAId,QAAQ,CAAC,MAAM;MACpC,OAAOO,gBAAgB,CAACM,KAAI,GAAIF,SAAS,CAACE,KAAI,GAAI,EAAE;IACtD,CAAC,CAAC;IAEF,MAAME,gBAAe,GAAIhB,GAAG,CAAC,KAAK,CAAC;;IAEnC;IACA,MAAMiB,YAAW,GAAIjB,GAAG,CAAC,MAAM,CAAC,EAAE;IAClC;IACA,MAAMkB,aAAY,GAAIlB,GAAG,CAAC,CACxB,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAG,CACvC,CAAC;IAEF,MAAMmB,oBAAmB,GAAIlB,QAAQ,CAAC,MAAMgB,YAAY,CAACH,KAAI,KAAM,KAAK,CAAC;IAEzE,MAAMM,YAAW,GAAIpB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9B,MAAMqB,oBAAmB,GAAIrB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAEtC,MAAMsB,WAAU,GAAIA,CAAA,KAAM;MACxB,IAAIF,YAAY,CAACN,KAAK,CAACS,MAAK,GAAI,CAAC,EAAE;QACjCH,YAAY,CAACN,KAAK,CAACU,IAAI,CAAC,EAAE,CAAC;MAC7B;IACF,CAAC;IAED,MAAMC,cAAa,GAAKC,KAAK,IAAK;MAChCN,YAAY,CAACN,KAAK,CAACa,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,MAAME,mBAAkB,GAAIA,CAAA,KAAM;MAChC,IAAIP,oBAAoB,CAACP,KAAK,CAACS,MAAK,GAAI,CAAC,EAAE;QACzCF,oBAAoB,CAACP,KAAK,CAACU,IAAI,CAAC,EAAE,CAAC;MACrC;IACF,CAAC;IAED,MAAMK,sBAAqB,GAAKH,KAAK,IAAK;MACxCL,oBAAoB,CAACP,KAAK,CAACa,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,MAAMI,qBAAoB,GAAIA,CAAA,KAAM;MAClCd,gBAAgB,CAACF,KAAI,GAAI,IAAI;IAC/B;IAEA,OAAO;MACLE,gBAAgB;MAChBR,gBAAgB;MAChBC,YAAY;MACZC,SAAS;MACTK,cAAc;MACdE,YAAY;MACZC,aAAa;MACbC,oBAAoB;MACpBC,YAAY;MACZC,oBAAoB;MACpBC,WAAW;MACXG,cAAc;MACdG,mBAAmB;MACnBC,sBAAsB;MACtBC;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}