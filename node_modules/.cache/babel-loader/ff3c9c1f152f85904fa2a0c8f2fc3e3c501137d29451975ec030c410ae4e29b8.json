{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '@/assets/images/icons/siren.png';\nimport _imports_1 from '@/assets/images/icons/rightarrows.png';\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"search-wrap\"\n};\nconst _hoisted_3 = {\n  class: \"filter-section\"\n};\nconst _hoisted_4 = {\n  class: \"job-posting-wrap\"\n};\nconst _hoisted_5 = {\n  class: \"job-posting-info\"\n};\nconst _hoisted_6 = {\n  class: \"course-title\"\n};\nconst _hoisted_7 = {\n  class: \"course-schedule\"\n};\nconst _hoisted_8 = {\n  class: \"schedule-info\"\n};\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_search_filter_modal = _resolveComponent(\"search-filter-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"main\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"div\", {\n    class: \"header-title\"\n  }, \"지혜 탐색\"), _createElementVNode(\"div\", null, [_createElementVNode(\"img\", {\n    src: _imports_0\n  }), _createTextVNode(\" 신고하기 \")])], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"search-input\",\n    placeholder: \"게시물 제목을 입력하세요\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchInput = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.searchPosts && $setup.searchPosts(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchInput]]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"filter-item\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.onFilterClick($options.SEARCH_FILTER_TYPES.JOB)),\n    style: _normalizeStyle({\n      color: $setup.selectedJob === '전체 직무' ? 'black' : '#024CAA'\n    })\n  }, \" 전체 직무 \", 4 /* STYLE */)])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.postCount) + \"건\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.postList, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"job-posting-list\",\n      key: post\n    }, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(post.postTitle), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(post.job), 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: _imports_1,\n      class: \"right-arrow-icon\",\n      alt: \"Right Arrow Icon\",\n      onClick: $event => $setup.onMoveDetailPageClick(post.postId)\n    }, null, 8 /* PROPS */, _hoisted_9)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $setup.modalPopupStatue ? (_openBlock(), _createBlock(_component_search_filter_modal, {\n    key: 0,\n    onCloseModal: _cache[3] || (_cache[3] = $event => $setup.modalPopupStatue = false),\n    onSelectProvince: $setup.handleSelectProvince,\n    \"filter-type\": $setup.filterTypes\n  }, null, 8 /* PROPS */, [\"onSelectProvince\", \"filter-type\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","src","_createTextVNode","_hoisted_2","placeholder","type","_cache","$event","$setup","searchInput","onKeyup","_withKeys","args","searchPosts","_hoisted_3","onClick","onFilterClick","$options","SEARCH_FILTER_TYPES","JOB","style","_normalizeStyle","color","selectedJob","_hoisted_4","_hoisted_5","_toDisplayString","postCount","_renderList","postList","post","key","_hoisted_6","postTitle","_hoisted_7","_hoisted_8","job","alt","onMoveDetailPageClick","postId","_hoisted_9","modalPopupStatue","_createBlock","_component_search_filter_modal","onCloseModal","onSelectProvince","handleSelectProvince","filterTypes","_createCommentVNode"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/WisdomExplore.vue"],"sourcesContent":["<script>\nimport {useRouter} from \"vue-router\";\nimport {ROUTES} from \"@/router/routes\";\nimport SearchFilterModal from \"@/components/SearchFilterModal.vue\";\nimport {onMounted, ref} from \"vue\";\nimport {SEARCH_FILTER_TYPES} from \"@/constants/searchFilterTypes\";\nimport {formatDate} from \"@/utils/format\";\n\nexport default {\n  name: \"WisdomExplore\",\n  computed: {\n    SEARCH_FILTER_TYPES() {\n      return SEARCH_FILTER_TYPES\n    }\n  },\n  components: { SearchFilterModal },\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n\n    const modalPopupStatue = ref(false);\n    const searchInput = ref(\"\");\n    const filterTypes = ref(\"\");\n    const selectedJob = ref(\"전체 직무\");\n\n    const postCount = ref(0);\n    const postList = ref();\n\n    const searchPosts = () => {\n      // todo API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    }\n\n    const fetchPosts = () => {\n      // todo API 구현 시 아래에 로직 구현 하기\n\n      const data = [\n        {\n          postId: 1,\n          postTitle: '시니어도 할 수 있는 Ghat GPT',\n          job: '서비스',\n        },\n        {\n          postId: 2,\n          postTitle: '시니어도 할 수 있는 EXCEL',\n          job: 'IT 엔지니어',\n        },\n      ];\n\n      postList.value = data;\n      postCount.value = postList.value.length;\n    }\n\n    onMounted(() => {\n      fetchPosts();\n    })\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.WISDOM_EXPLORE_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    const onFilterClick = (filterType) => {\n      filterTypes.value = filterType;\n      modalPopupStatue.value = true;\n    }\n\n    const handleSelectProvince = (selected) => {\n      console.log(\"선택된 필터:\", selected);\n      if (selected === SEARCH_FILTER_TYPES.JOB) {\n        selectedJob.value = selected.job;\n      }\n    }\n\n    return {\n      modalPopupStatue,\n      searchInput,\n      filterTypes,\n      selectedJob,\n      postCount,\n      postList,\n      handleSelectProvince,\n      searchPosts,\n      onMoveDetailPageClick,\n      onFilterClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">\n      <div class=\"header-title\">지혜 탐색</div>\n      <div>\n        <img src=\"@/assets/images/icons/siren.png\">\n        신고하기\n      </div>\n    </div>\n    <div class=\"search-wrap\">\n      <input\n          class=\"search-input\"\n          placeholder=\"게시물 제목을 입력하세요\"\n          type=\"text\"\n          v-model=\"searchInput\"\n          @keyup.enter=\"searchPosts\"\n      >\n      <div class=\"filter-section\">\n        <div class=\"filter-item\"\n             @click=\"onFilterClick(SEARCH_FILTER_TYPES.JOB)\"\n             :style=\"{ color: selectedJob === '전체 직무' ? 'black' : '#024CAA' }\">\n          전체 직무\n        </div>\n      </div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ postCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"post in postList\" :key=\"post\">\n        <div class=\"course-title\">{{ post.postTitle }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ post.job }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(post.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n  <search-filter-modal\n      v-if=\"modalPopupStatue\"\n      @close-modal=\"modalPopupStatue = false\"\n      @select-province=\"handleSelectProvince\"\n      :filter-type=\"filterTypes\"\n  />\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between; /* 두 요소를 양 끝에 배치 */\n  align-items: center; /* 세로 정렬을 가운데로 */\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.search-wrap {\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n.search-input {\n  font-size: 16px;\n  width: 100%;\n  padding: 10px 30px 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  box-sizing: border-box;\n  background-image: url('@/assets/images/icons/search.png');\n  background-size: 20px 20px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.filter-item {\n  flex: 1;\n  text-align: center;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #413F42;\n  border-radius: 8px;\n  background-color: #ffffff;\n  height: 16px;\n  margin-right: 10px;\n  cursor: pointer;\n}\n\n.filter-item:last-child {\n  margin-right: 0;\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n</style>"],"mappings":";OAoGaA,UAAqC;OA0BnCC,UAA2C;;EA9BlDC,KAAK,EAAC;AAAM;;EAQXA,KAAK,EAAC;AAAa;;EAQjBA,KAAK,EAAC;AAAgB;;EAQxBA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAe;mBA7HpC;;;uBAAAC,mBAAA,CAAAC,SAAA,SAgGEC,mBAAA,CAkCO,QAlCPC,UAkCO,G,0BAjCLD,mBAAA,CAMM;IANDH,KAAK,EAAC;EAAQ,IACjBG,mBAAA,CAAqC;IAAhCH,KAAK,EAAC;EAAc,GAAC,OAAK,GAC/BG,mBAAA,CAGM,cAFJA,mBAAA,CAA2C;IAAtCE,GAAqC,EAArCP;EAAqC,IApGlDQ,gBAAA,CAoGmD,QAE7C,E,wBAEFH,mBAAA,CAeM,OAfNI,UAeM,G,gBAdJJ,mBAAA,CAMC;IALGH,KAAK,EAAC,cAAc;IACpBQ,WAAW,EAAC,eAAe;IAC3BC,IAAI,EAAC,MAAM;IA5GrB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6GmBC,MAAA,CAAAC,WAAW,GAAAF,MAAA;IACnBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MA9GhBK,SAAA,KAAAC,IAAA,KA8GwBJ,MAAA,CAAAK,WAAA,IAAAL,MAAA,CAAAK,WAAA,IAAAD,IAAA,CAAW;iEADhBJ,MAAA,CAAAC,WAAW,E,GAGxBV,mBAAA,CAMM,OANNe,UAMM,GALJf,mBAAA,CAIM;IAJDH,KAAK,EAAC,aAAa;IAClBmB,OAAK,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAQ,aAAa,CAACC,QAAA,CAAAC,mBAAmB,CAACC,GAAG;IAC5CC,KAAK,EAnHnBC,eAAA;MAAAC,KAAA,EAmH8Bd,MAAA,CAAAe,WAAW;IAAA;KAAsC,SAEvE,iB,KAGJxB,mBAAA,CASM,OATNyB,UASM,GARJzB,mBAAA,CAAoD,OAApD0B,UAAoD,EAAAC,gBAAA,CAAnBlB,MAAA,CAAAmB,SAAS,IAAG,GAAC,kB,kBAC9C9B,mBAAA,CAMMC,SAAA,QAhIZ8B,WAAA,CA0HmDpB,MAAA,CAAAqB,QAAQ,EAAhBC,IAAI;yBAAzCjC,mBAAA,CAMM;MANDD,KAAK,EAAC,kBAAkB;MAA2BmC,GAAG,EAAED;QAC3D/B,mBAAA,CAAoD,OAApDiC,UAAoD,EAAAN,gBAAA,CAAvBI,IAAI,CAACG,SAAS,kBAC3ClC,mBAAA,CAGM,OAHNmC,UAGM,GAFJnC,mBAAA,CAA+C,OAA/CoC,UAA+C,EAAAT,gBAAA,CAAjBI,IAAI,CAACM,GAAG,kBACtCrC,mBAAA,CAA6I;MAAxIE,GAA2C,EAA3CN,UAA2C;MAACC,KAAK,EAAC,kBAAkB;MAACyC,GAAG,EAAC,kBAAkB;MAAEtB,OAAK,EAAAR,MAAA,IAAEC,MAAA,CAAA8B,qBAAqB,CAACR,IAAI,CAACS,MAAM;4BA9HpJC,UAAA,E;sCAoIYhC,MAAA,CAAAiC,gBAAgB,I,cAD1BC,YAAA,CAKEC,8BAAA;IAxIJZ,GAAA;IAqIOa,YAAW,EAAAtC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAiC,gBAAgB;IAC7BI,gBAAe,EAAErC,MAAA,CAAAsC,oBAAoB;IACrC,aAAW,EAAEtC,MAAA,CAAAuC;kEAvIpBC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}