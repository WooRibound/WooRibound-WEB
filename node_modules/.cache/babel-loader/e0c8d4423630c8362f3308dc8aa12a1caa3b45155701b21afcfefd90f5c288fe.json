{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport Routes from \"@/router/routes\";\nconst router = createRouter({\n  history: createWebHistory(\"\"),\n  routes: [{\n    path: \"/\",\n    name: Routes.Main,\n    component: () => import(\"@/views/main/MainView.vue\")\n  }, {\n    path: \"/admin\",\n    // Admin 페이지 경로 추가\n    name: Routes.AdminMain,\n    component: () => import(\"@/views/main/AdminMain.vue\")\n  }]\n});\nrouter.beforeEach((to, from, next) => {\n  const userStore = useUserStore();\n\n  // 사용자 로그인 여부와 사용자 유형 확인\n  if (userStore.isLoggedIn && (userStore.userType === USER_TYPES.INFRA_ADMIN || userStore.userType === USER_TYPES.SERVICE_ADMIN)) {\n    // 루트 경로를 admin으로 리다이렉트\n    if (to.path === \"/\") {\n      next({\n        path: \"/admin\"\n      }); // AdminMainView로 리다이렉트\n    } else {\n      next(); // 다른 경로로 이동\n    }\n  } else {\n    next(); // 로그인하지 않은 경우, 원래 경로로 이동\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Routes","router","history","routes","path","name","Main","component","AdminMain","beforeEach","to","from","next","userStore","useUserStore","isLoggedIn","userType","USER_TYPES","INFRA_ADMIN","SERVICE_ADMIN"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\nimport Routes from \"@/router/routes\";\n\nconst router = createRouter({\n    history: createWebHistory(\"\"),\n    routes: [\n        {\n            path: \"/\",\n            name: Routes.Main,\n            component: () => import(\"@/views/main/MainView.vue\"),\n        },\n        {\n            path: \"/admin\", // Admin 페이지 경로 추가\n            name: Routes.AdminMain,\n            component: () => import(\"@/views/main/AdminMain.vue\"),\n        },\n    ],\n});\n\nrouter.beforeEach((to, from, next) => {\n    const userStore = useUserStore();\n\n    // 사용자 로그인 여부와 사용자 유형 확인\n    if (userStore.isLoggedIn &&\n        (userStore.userType === USER_TYPES.INFRA_ADMIN || userStore.userType === USER_TYPES.SERVICE_ADMIN)) {\n\n        // 루트 경로를 admin으로 리다이렉트\n        if (to.path === \"/\") {\n            next({ path: \"/admin\" }); // AdminMainView로 리다이렉트\n        } else {\n            next(); // 다른 경로로 이동\n        }\n    } else {\n        next(); // 로그인하지 않은 경우, 원래 경로로 이동\n    }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,MAAM,GAAGH,YAAY,CAAC;EACxBI,OAAO,EAAEH,gBAAgB,CAAC,EAAE,CAAC;EAC7BI,MAAM,EAAE,CACJ;IACIC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAEL,MAAM,CAACM,IAAI;IACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;EACvD,CAAC,EACD;IACIH,IAAI,EAAE,QAAQ;IAAE;IAChBC,IAAI,EAAEL,MAAM,CAACQ,SAAS;IACtBD,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,4BAA4B;EACxD,CAAC;AAET,CAAC,CAAC;AAEFN,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,SAAS,GAAGC,YAAY,CAAC,CAAC;;EAEhC;EACA,IAAID,SAAS,CAACE,UAAU,KACnBF,SAAS,CAACG,QAAQ,KAAKC,UAAU,CAACC,WAAW,IAAIL,SAAS,CAACG,QAAQ,KAAKC,UAAU,CAACE,aAAa,CAAC,EAAE;IAEpG;IACA,IAAIT,EAAE,CAACN,IAAI,KAAK,GAAG,EAAE;MACjBQ,IAAI,CAAC;QAAER,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACHQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACZ;EACJ,CAAC,MAAM;IACHA,IAAI,CAAC,CAAC,CAAC,CAAC;EACZ;AACJ,CAAC,CAAC;AAEF,eAAeX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}