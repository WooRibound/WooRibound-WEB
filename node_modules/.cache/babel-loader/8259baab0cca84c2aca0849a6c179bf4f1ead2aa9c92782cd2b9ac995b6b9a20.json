{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from \"vue\";\nexport default {\n  name: \"RegisterView\",\n  setup() {\n    // 도와 광역시 목록\n    const provinces = ref([\"서울특별시\", \"부산광역시\", \"대구광역시\", \"인천광역시\", \"광주광역시\", \"대전광역시\", \"울산광역시\", \"세종특별자치시\", \"경기도\", \"강원도\", \"충청북도\", \"충청남도\", \"전라북도\", \"전라남도\", \"경상북도\", \"경상남도\", \"제주특별자치도\"]);\n\n    // 시 목록\n    const allCities = {\n      \"서울특별시\": [\"서울시\"],\n      \"부산광역시\": [\"부산시\"],\n      \"대구광역시\": [\"대구시\"],\n      \"인천광역시\": [\"인천시\"],\n      \"광주광역시\": [\"광주시\"],\n      \"대전광역시\": [\"대전시\"],\n      \"울산광역시\": [\"울산시\"],\n      \"세종특별자치시\": [\"세종시\"],\n      \"경기도\": [\"수원시\", \"성남시\", \"고양시\", \"용인시\", \"안양시\", \"평택시\"],\n      \"강원도\": [\"춘천시\", \"원주시\", \"강릉시\", \"동해시\"],\n      \"충청북도\": [\"청주시\", \"충주시\", \"제천시\"],\n      \"충청남도\": [\"천안시\", \"공주시\", \"보령시\", \"아산시\"],\n      \"전라북도\": [\"전주시\", \"익산시\", \"군산시\"],\n      \"전라남도\": [\"목포시\", \"여수시\", \"순천시\"],\n      \"경상북도\": [\"포항시\", \"경주시\", \"김천시\", \"구미시\"],\n      \"경상남도\": [\"창원시\", \"진주시\", \"통영시\", \"사천시\"],\n      \"제주특별자치도\": [\"제주시\", \"서귀포시\"]\n    };\n\n    // 선택된 도와 관련된 시 목록\n    const selectedProvince = ref(\"\");\n    const cities = computed(() => allCities[selectedProvince.value] || []);\n\n    // 경력 여부와 직종\n    const careerStatus = ref(\"none\"); // 'none', 'yes', 'no' 중 선택\n    const jobCategories = ref([\"개발자\", \"디자이너\", \"마케터\", \"영업\", \"기획자\", \"기타\"]);\n    const isJobCategoryEnabled = computed(() => careerStatus.value === \"yes\");\n    const selectedJobs = ref([\"\"]);\n    const addJobField = () => {\n      if (selectedJobs.value.length < 3) {\n        selectedJobs.value.push(\"\");\n      }\n    };\n    const removeJobField = index => {\n      selectedJobs.value.splice(index, 1);\n    };\n    return {\n      provinces,\n      selectedProvince,\n      cities,\n      careerStatus,\n      jobCategories,\n      isJobCategoryEnabled,\n      selectedJobs,\n      addJobField,\n      removeJobField\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","name","setup","provinces","allCities","selectedProvince","cities","value","careerStatus","jobCategories","isJobCategoryEnabled","selectedJobs","addJobField","length","push","removeJobField","index","splice"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/Authentication/RegisterView.vue"],"sourcesContent":["<script>\nimport { ref, computed } from \"vue\";\n\nexport default {\n  name: \"RegisterView\",\n  setup() {\n    // 도와 광역시 목록\n    const provinces = ref([\n      \"서울특별시\", \"부산광역시\", \"대구광역시\", \"인천광역시\", \"광주광역시\", \"대전광역시\",\n      \"울산광역시\", \"세종특별자치시\", \"경기도\", \"강원도\", \"충청북도\", \"충청남도\",\n      \"전라북도\", \"전라남도\", \"경상북도\", \"경상남도\", \"제주특별자치도\"\n    ]);\n\n    // 시 목록\n    const allCities = {\n      \"서울특별시\": [\"서울시\"],\n      \"부산광역시\": [\"부산시\"],\n      \"대구광역시\": [\"대구시\"],\n      \"인천광역시\": [\"인천시\"],\n      \"광주광역시\": [\"광주시\"],\n      \"대전광역시\": [\"대전시\"],\n      \"울산광역시\": [\"울산시\"],\n      \"세종특별자치시\": [\"세종시\"],\n      \"경기도\": [\"수원시\", \"성남시\", \"고양시\", \"용인시\", \"안양시\", \"평택시\"],\n      \"강원도\": [\"춘천시\", \"원주시\", \"강릉시\", \"동해시\"],\n      \"충청북도\": [\"청주시\", \"충주시\", \"제천시\"],\n      \"충청남도\": [\"천안시\", \"공주시\", \"보령시\", \"아산시\"],\n      \"전라북도\": [\"전주시\", \"익산시\", \"군산시\"],\n      \"전라남도\": [\"목포시\", \"여수시\", \"순천시\"],\n      \"경상북도\": [\"포항시\", \"경주시\", \"김천시\", \"구미시\"],\n      \"경상남도\": [\"창원시\", \"진주시\", \"통영시\", \"사천시\"],\n      \"제주특별자치도\": [\"제주시\", \"서귀포시\"]\n    };\n\n    // 선택된 도와 관련된 시 목록\n    const selectedProvince = ref(\"\");\n    const cities = computed(() => allCities[selectedProvince.value] || []);\n\n    // 경력 여부와 직종\n    const careerStatus = ref(\"none\"); // 'none', 'yes', 'no' 중 선택\n    const jobCategories = ref([\n      \"개발자\", \"디자이너\", \"마케터\", \"영업\", \"기획자\", \"기타\"\n    ]);\n\n    const isJobCategoryEnabled = computed(() => careerStatus.value === \"yes\");\n\n    const selectedJobs = ref([\"\"]);\n\n    const addJobField = () => {\n      if (selectedJobs.value.length < 3) {\n        selectedJobs.value.push(\"\");\n      }\n    };\n\n    const removeJobField = (index) => {\n      selectedJobs.value.splice(index, 1);\n    };\n\n    return {\n      provinces,\n      selectedProvince,\n      cities,\n      careerStatus,\n      jobCategories,\n      isJobCategoryEnabled,\n      selectedJobs,\n      addJobField,\n      removeJobField\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">회원가입</div>\n    <div class=\"content\">\n      <div class=\"input-section\">\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <input class=\"input-field\" placeholder=\"아이디\">\n        </div>\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <input class=\"input-field\" placeholder=\"비밀번호\" type=\"password\">\n        </div>\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <input class=\"input-field\" placeholder=\"휴대폰 번호\" type=\"tel\">\n        </div>\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <select class=\"input-field\" aria-label=\"성별 선택\">\n            <option value=\"\" disabled selected>성별</option>\n            <option value=\"male\">남성</option>\n            <option value=\"female\">여성</option>\n          </select>\n        </div>\n        <!-- 생년월일 입력란 추가 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <input class=\"input-field\" type=\"date\" placeholder=\"생년월일\" required />\n        </div>\n        <!-- 거주 도 선택 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <select v-model=\"selectedProvince\" class=\"input-field\" aria-label=\"거주 도\">\n            <option value=\"\" disabled selected>거주 도</option>\n            <option v-for=\"province in provinces\" :key=\"province\" :value=\"province\">{{ province }}</option>\n          </select>\n        </div>\n        <!-- 거주 시 선택 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span>\n          <select class=\"input-field\" aria-label=\"거주 시\">\n            <option value=\"\" disabled selected>거주 시</option>\n            <option v-for=\"city in cities\" :key=\"city\" :value=\"city\">{{ city }}</option>\n          </select>\n        </div>\n        <!-- 경력 여부 선택 -->\n        <div class=\"input-label\">\n          <span class=\"required\">*</span> 경력 여부\n          <label><input type=\"radio\" v-model=\"careerStatus\" value=\"yes\"> 있음</label>\n          <label><input type=\"radio\" v-model=\"careerStatus\" value=\"no\"> 없음</label>\n        </div>\n\n        <!-- 직종 선택 -->\n        <div v-if=\"isJobCategoryEnabled\" class=\"input-label job-category-section\">\n          <div v-for=\"(job, index) in selectedJobs\" :key=\"index\" class=\"job-category\">\n            <div class=\"select-wrapper\">\n              <select v-model=\"selectedJobs[index]\" class=\"input-field\" aria-label=\"직종 선택\">\n                <option value=\"\" disabled selected>직종 선택</option>\n                <option v-for=\"job in jobCategories\" :key=\"job\" :value=\"job\">{{ job }}</option>\n              </select>\n            </div>\n            <div class=\"button-wrapper\">\n              <div v-if=\"index === selectedJobs.length - 1 && selectedJobs.length < 3\" @click=\"addJobField\" class=\"icon-button add-button\">\n                <img src=\"@/assets/images/icons/plus.png\" alt=\"추가\">\n              </div>\n              <div v-if=\"index > 0 && index === selectedJobs.length - 1\" @click=\"removeJobField(index)\" class=\"icon-button remove-button\">\n                <img src=\"@/assets/images/icons/minus.png\" alt=\"제거\">\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"register-button\">회원가입</div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;                      /* 가변 영역, 헤더와 바텀 내비게이션을 제외한 나머지 공간 차지 */\n  padding: 20px;                /* 내부 여백 */\n  box-sizing: border-box;       /* 패딩을 포함한 크기 계산 */\n  background-color: #f8f9fa;    /* 배경색 */\n  overflow-y: auto;             /* 내용이 넘칠 경우 스크롤 가능 */\n}\n\n.header {\n  font-size: 24px;              /* 헤더 폰트 크기 */\n  font-weight: bold;            /* 헤더 두껍게 */\n  margin-bottom: 20px;          /* 아래쪽 여백 */\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between; /* 콘텐츠와 요소를 공간을 균등하게 분배 */\n  height: 100%; /* 전체 높이를 사용하도록 설정 */\n}\n\n.input-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  flex: 1; /* 가변적으로 공간을 차지하도록 설정 */\n}\n\n.input-label {\n  display: flex; /* 수평 정렬 */\n  align-items: center; /* 세로 중앙 정렬 */\n  width: 100%;\n}\n\n.input-field {\n  width: 100%; /* 너비를 100%로 설정하여 부모 요소의 전체 너비를 차지 */\n  padding: 10px;\n  margin: 10px 10px;\n  box-sizing: border-box;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  color: #413F42;\n}\n\n.required {\n  color: #F60F0F; /* 필수 입력 사항 색상 */\n  margin-right: 5px; /* 입력 필드와의 간격 */\n}\n\n.register-button {\n  width: 100%;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: #024CAA;\n  color: white;\n  text-align: center;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 8px;\n}\n\n.job-category-section {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.job-category {\n  display: flex; /* 수평 정렬 */\n  align-items: center; /* 세로 중앙 정렬 */\n  justify-content: space-between; /* 좌우 간격을 균등하게 */\n  margin-top: 10px;\n  height: 50px; /* 고정 높이 */\n}\n\n.select-wrapper {\n  flex: 1; /* select 필드가 가로 공간을 차지하도록 설정 */\n  margin-right: 10px; /* 오른쪽 여백 추가 */\n}\n\n.button-wrapper {\n  display: flex;\n  align-items: center;\n  width: 100px;\n  flex-shrink: 0; /* 버튼 크기를 고정 */\n}\n\n.icon-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n}\n\n.add-button img,\n.remove-button img {\n  width: 24px;\n  height: 24px;\n}\n\n.add-button {\n  background-color: #e0f7fa;\n  border-radius: 50%;\n}\n\n.remove-button {\n  background-color: #ffebee;\n  border-radius: 50%;\n}\ninput[type='date'] {\n  border: none; // 테두리 설정은 본인 맘대로\n  position: relative; // 캘린더 아이콘을 클릭해야만 달력이 보이기 때문에 이 영역 자체를 제어하기 위해 설정\n  width: 100%;\n  padding: 10px;\n  background: url(../../../assets/Calendar.svg) no-repeat right 10px center /\n    35px auto; // 배경에 커스텀 아이콘을 넣어주자! x축은 오른쪽에서부터 10px 떨어지게 하고, y축은 가운데 정렬하고, width 35px에 height auto라는 크기를 부여한다.\n  background-color: #bbbbbb;\n  box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  text-align: center;\n  font-size: 100%;\n  margin-bottom: 20px;\n}\n\n// 실제 캘린더 아이콘을 클릭하는 영역을 의미하는 선택자\n// 이 영역을 확장해서 input의 어떤 곳을 클릭해도 캘린더를 클릭한 것과 같은 효과를 만들자!\ninput[type='date']::-webkit-calendar-picker-indicator {\n  position: absolute; // 이를 설정하기 위해 사전에 relative를 설정한 것이다.\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: transparent; // 배경은 투명하게,\n  color: transparent; // 글자도 투명하게! 이 두 설정을 통해 캘린더 아이콘을 사라지게 만든다.\n  cursor: pointer;\n}\n\n// type이 date인 input의 placeholder를 커스텀하기 위한 선택자\n// 기본적으로 type date인 input은 placeholder가 먹히지 않기 때문이다!\ninput[type='date']::before {\n  content: attr(placeholder); // input 태그의 placeholder라는 속성값을 가져와서 content로 사용한다. 보통은 placeholder보다는 data-placeholder라는 커스텀 속성을 만들어서 사용하시는 것 같다.\n  width: 100%;\n  height: 100%;\n}\n\n// input에 어떠한 유효값이 입력된 상태인지 확인하는 선택자\n// 날짜를 선택하면 유효값이 입력된다.\n// 이 속성을 활용하고자 한다면 반드시 태그에 required 속성을 달아줘야한다.\ninput[type='date']:valid::before {\n  display: none; // 유효값이 입력된 경우 before에 있는 것을 사라지게 한다. 즉, placeholder를 사라지게 한다.\n}\n</style>\n"],"mappings":";AACA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,SAAQ,GAAIJ,GAAG,CAAC,CACpB,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EACpD,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAChD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAQ,CACzC,CAAC;;IAEF;IACA,MAAMK,SAAQ,GAAI;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,OAAO,EAAE,CAAC,KAAK,CAAC;MAChB,SAAS,EAAE,CAAC,KAAK,CAAC;MAClB,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACjD,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACnC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC7B,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACpC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC7B,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC7B,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACpC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACpC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM;IAC3B,CAAC;;IAED;IACA,MAAMC,gBAAe,GAAIN,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMO,MAAK,GAAIN,QAAQ,CAAC,MAAMI,SAAS,CAACC,gBAAgB,CAACE,KAAK,KAAK,EAAE,CAAC;;IAEtE;IACA,MAAMC,YAAW,GAAIT,GAAG,CAAC,MAAM,CAAC,EAAE;IAClC,MAAMU,aAAY,GAAIV,GAAG,CAAC,CACxB,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAG,CACvC,CAAC;IAEF,MAAMW,oBAAmB,GAAIV,QAAQ,CAAC,MAAMQ,YAAY,CAACD,KAAI,KAAM,KAAK,CAAC;IAEzE,MAAMI,YAAW,GAAIZ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAE9B,MAAMa,WAAU,GAAIA,CAAA,KAAM;MACxB,IAAID,YAAY,CAACJ,KAAK,CAACM,MAAK,GAAI,CAAC,EAAE;QACjCF,YAAY,CAACJ,KAAK,CAACO,IAAI,CAAC,EAAE,CAAC;MAC7B;IACF,CAAC;IAED,MAAMC,cAAa,GAAKC,KAAK,IAAK;MAChCL,YAAY,CAACJ,KAAK,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,OAAO;MACLb,SAAS;MACTE,gBAAgB;MAChBC,MAAM;MACNE,YAAY;MACZC,aAAa;MACbC,oBAAoB;MACpBC,YAAY;MACZC,WAAW;MACXG;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}