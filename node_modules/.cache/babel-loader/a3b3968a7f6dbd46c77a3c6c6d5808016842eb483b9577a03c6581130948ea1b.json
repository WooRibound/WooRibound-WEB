{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nimport _imports_0 from '@/assets/images/icons/rightarrows.png';\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"search-wrap\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"recommended-section\"\n};\nconst _hoisted_4 = {\n  class: \"job-posting-wrap\"\n};\nconst _hoisted_5 = {\n  class: \"job-posting-info\"\n};\nconst _hoisted_6 = {\n  class: \"job-posting-list-top\"\n};\nconst _hoisted_7 = {\n  class: \"course-title\"\n};\nconst _hoisted_8 = {\n  class: \"course-subtitle\"\n};\nconst _hoisted_9 = {\n  class: \"course-schedule\"\n};\nconst _hoisted_10 = {\n  class: \"schedule-info\"\n};\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, \"채용 공고\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"search-input\",\n    placeholder: \"기업명을 입력하세요\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchInput = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.searchJopPosting && _ctx.searchJopPosting(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.searchInput]]), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"filter-section\"\n  }, [_createElementVNode(\"div\", {\n    class: \"filter-item\"\n  }, \"직무\"), _createElementVNode(\"div\", {\n    class: \"filter-item\"\n  }, \"지역\")], -1 /* HOISTED */))]), _ctx.viewType === 'new' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n    class: \"recommended-title\"\n  }, \"추천 공고\", -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"recommended-content\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.jopPostingCount) + \"건\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.jobPostingList, jobPosting => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"job-posting-list\",\n      key: jobPosting\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(jobPosting.entName), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: _normalizeClass(['recruitment-phase', _ctx.recruitmentPhaseClass])\n    }, _toDisplayString(_ctx.recruitmentPhase), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(jobPosting.postTitle), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.formatDate(new Date(jobPosting.startDate))) + \" ~ \" + _toDisplayString(_ctx.formatDate(new Date(jobPosting.endDate))), 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: _imports_0,\n      class: \"right-arrow-icon\",\n      alt: \"Right Arrow Icon\",\n      onClick: $event => _ctx.onMoveDetailPageClick(jobPosting.postId)\n    }, null, 8 /* PROPS */, _hoisted_11)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","placeholder","type","_cache","$event","_ctx","searchInput","onKeyup","_withKeys","args","searchJopPosting","viewType","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_toDisplayString","jopPostingCount","_Fragment","_renderList","jobPostingList","jobPosting","_hoisted_6","_hoisted_7","entName","_normalizeClass","recruitmentPhaseClass","recruitmentPhase","_hoisted_8","postTitle","_hoisted_9","_hoisted_10","formatDate","Date","startDate","endDate","src","alt","onClick","onMoveDetailPageClick","postId","_hoisted_11"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/JobPostingsPage.vue"],"sourcesContent":["<script>\nimport {useRoute, useRouter} from 'vue-router';\nimport {computed, onMounted, ref} from \"vue\";\nimport {ROUTES} from \"@/router/routes\";\nimport {formatDate} from \"@/utils/format\";\n\nexport default {\n  name: \"JobPostingsPage\",\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType\n    console.log(viewType);\n    const today = new Date();\n\n    const searchInput = ref(\"\");\n    const jopPostingCount = ref(0);\n    const startDate = ref(new Date('2024-11-01'));  // 채용 시작일\n    const endDate = ref(new Date('2024-11-15'));    // 채용 마감일\n    const jobPostingList = ref();\n\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    }\n\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n      ];\n      jobPostingList.value = data;\n      jopPostingCount.value = jobPostingList.value.length;\n      console.log(jobPostingList.value);\n    }\n\n    onMounted(() => {\n      fetchJopPosting();\n    })\n\n    const recruitmentPhase = computed(() => {\n      if (today < startDate.value) {\n        return '오픈 전';\n      } else if (today <= endDate.value) {\n        return '채용 중';\n      } else {\n        return '채용 마감';\n      }\n    });\n\n    const recruitmentPhase = (postState) => {\n      switch (postState) {\n        case '오픈 전':\n          return '오픈 전';\n        case '채용 중':\n          return 'phase-in-progress';\n        case '채용 마감':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    }\n\n    const recruitmentPhaseClass = computed(() => {\n      switch (recruitmentPhase.value) {\n        case '오픈 전':\n          return 'phase-open';\n        case '채용 중':\n          return 'phase-in-progress';\n        case '채용 마감':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    });\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    return {\n      jopPostingCount,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchInput,\n      viewType,\n      jobPostingList,\n      searchJopPosting,\n      onMoveDetailPageClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">채용 공고</div>\n    <div class=\"search-wrap\">\n      <input\n          class=\"search-input\"\n          placeholder=\"기업명을 입력하세요\"\n          type=\"text\"\n          v-model=\"searchInput\"\n          @keyup.enter=\"searchJopPosting\"\n      >\n      <div class=\"filter-section\">\n        <div class=\"filter-item\">직무</div>\n        <div class=\"filter-item\">지역</div>\n      </div>\n    </div>\n    <div class=\"recommended-section\" v-if=\"viewType === 'new'\">\n      <div class=\"recommended-title\">추천 공고</div>\n      <div class=\"recommended-content\"></div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"jobPosting in jobPostingList\" :key=\"jobPosting\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">{{ jobPosting.entName }}</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass]\">{{ recruitmentPhase }}</div>\n        </div>\n        <div class=\"course-subtitle\">{{ jobPosting.postTitle }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(jobPosting.startDate)) }} ~ {{ formatDate(new Date(jobPosting.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(jobPosting.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  font-size: 16px;\n  width: 100%;\n  padding: 10px 30px 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  box-sizing: border-box;\n  background-image: url('@/assets/images/icons/search.png');\n  background-size: 20px 20px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.filter-item {\n  flex: 1;\n  text-align: center;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #413F42;\n  border-radius: 8px;\n  background-color: #ffffff;\n  height: 16px;\n  margin-right: 10px;\n}\n\n.filter-item:last-child {\n  margin-right: 0;\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2; /* 오픈 전 - 녹색 */\n}\n\n.phase-in-progress {\n  background-color: #FF9800; /* 채용 중 - 주황색 */\n}\n\n.phase-closed {\n  background-color: #686D76; /* 채용 마감 - 빨간색 */\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n\n.recommended-section {\n  margin-top: 10px;\n}\n\n.recommended-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.recommended-content {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  height: 150px;\n}\n</style>"],"mappings":";OA+IeA,UAA2C;;EA7BlDC,KAAK,EAAC;AAAM;;EAEXA,KAAK,EAAC;AAAa;;EApH5BC,GAAA;EAiISD,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAc;;EAGtBA,KAAK,EAAC;AAAiB;;EACvBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAe;oBA9IpC;;uBAkHEE,mBAAA,CAiCO,QAjCPC,UAiCO,G,0BAhCLC,mBAAA,CAA+B;IAA1BJ,KAAK,EAAC;EAAQ,GAAC,OAAK,sBACzBI,mBAAA,CAYM,OAZNC,UAYM,G,gBAXJD,mBAAA,CAMC;IALGJ,KAAK,EAAC,cAAc;IACpBM,WAAW,EAAC,YAAY;IACxBC,IAAI,EAAC,MAAM;IAxHrB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyHmBC,IAAA,CAAAC,WAAW,GAAAF,MAAA;IACnBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MA1HhBK,SAAA,KAAAC,IAAA,KA0HwBJ,IAAA,CAAAK,gBAAA,IAAAL,IAAA,CAAAK,gBAAA,IAAAD,IAAA,CAAgB;iEADrBJ,IAAA,CAAAC,WAAW,E,6BAGxBP,mBAAA,CAGM;IAHDJ,KAAK,EAAC;EAAgB,IACzBI,mBAAA,CAAiC;IAA5BJ,KAAK,EAAC;EAAa,GAAC,IAAE,GAC3BI,mBAAA,CAAiC;IAA5BJ,KAAK,EAAC;EAAa,GAAC,IAAE,E,wBAGQU,IAAA,CAAAM,QAAQ,c,cAA/Cd,mBAAA,CAGM,OAHNe,UAGM,EAAAT,MAAA,QAAAA,MAAA,OAFJJ,mBAAA,CAA0C;IAArCJ,KAAK,EAAC;EAAmB,GAAC,OAAK,qBACpCI,mBAAA,CAAuC;IAAlCJ,KAAK,EAAC;EAAqB,2B,MAnItCkB,mBAAA,gBAqIId,mBAAA,CAaM,OAbNe,UAaM,GAZJf,mBAAA,CAA0D,OAA1DgB,UAA0D,EAAAC,gBAAA,CAAzBX,IAAA,CAAAY,eAAe,IAAG,GAAC,kB,kBACpDpB,mBAAA,CAUMqB,SAAA,QAjJZC,WAAA,CAuIyDd,IAAA,CAAAe,cAAc,EAA5BC,UAAU;yBAA/CxB,mBAAA,CAUM;MAVDF,KAAK,EAAC,kBAAkB;MAAuCC,GAAG,EAAEyB;QACvEtB,mBAAA,CAGM,OAHNuB,UAGM,GAFJvB,mBAAA,CAAwD,OAAxDwB,UAAwD,EAAAP,gBAAA,CAA3BK,UAAU,CAACG,OAAO,kBAC/CzB,mBAAA,CAAuF;MAAjFJ,KAAK,EA1IrB8B,eAAA,uBA0I6CpB,IAAA,CAAAqB,qBAAqB;wBAAMrB,IAAA,CAAAsB,gBAAgB,wB,GAEhF5B,mBAAA,CAA6D,OAA7D6B,UAA6D,EAAAZ,gBAAA,CAA7BK,UAAU,CAACQ,SAAS,kBACpD9B,mBAAA,CAGM,OAHN+B,UAGM,GAFJ/B,mBAAA,CAAkI,OAAlIgC,WAAkI,EAAAf,gBAAA,CAApGX,IAAA,CAAA2B,UAAU,KAAKC,IAAI,CAACZ,UAAU,CAACa,SAAS,MAAK,KAAG,GAAAlB,gBAAA,CAAGX,IAAA,CAAA2B,UAAU,KAAKC,IAAI,CAACZ,UAAU,CAACc,OAAO,oBACvHpC,mBAAA,CAAmJ;MAA9IqC,GAA2C,EAA3C1C,UAA2C;MAACC,KAAK,EAAC,kBAAkB;MAAC0C,GAAG,EAAC,kBAAkB;MAAEC,OAAK,EAAAlC,MAAA,IAAEC,IAAA,CAAAkC,qBAAqB,CAAClB,UAAU,CAACmB,MAAM;4BA/I1JC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}