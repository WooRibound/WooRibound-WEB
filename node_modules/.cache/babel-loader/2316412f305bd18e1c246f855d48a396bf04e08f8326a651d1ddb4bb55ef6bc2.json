{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRoute, useRouter } from 'vue-router';\nimport { computed, onMounted, ref } from \"vue\";\nimport { ROUTES } from \"@/router/routes\";\nexport default {\n  name: \"JobPostingsPage\",\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType;\n    console.log(viewType);\n    const today = new Date();\n    const searchInput = ref(\"\");\n    const jopPostingCount = ref(2);\n    const startDate = ref(new Date('2024-11-01')); // 채용 시작일\n    const endDate = ref(new Date('2024-11-15')); // 채용 마감일\n\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    };\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [{\n        userName: '이승준',\n        userPhoneNumber: '010-1111-1111',\n        userImg: require('@/assets/images/logo/id_photo_sample.png'),\n        // 이미지 경로를 require로 수정\n        userEmail: 'test@example.com',\n        introduction: '자기소개 내용입니다.'\n      }];\n    };\n    onMounted(() => {\n      fetchJopPosting();\n    });\n    const recruitmentPhase = computed(() => {\n      if (today < startDate.value) {\n        return '오픈 전';\n      } else if (today <= endDate.value) {\n        return '채용 중';\n      } else {\n        return '채용 마감';\n      }\n    });\n    const recruitmentPhaseClass = computed(() => {\n      switch (recruitmentPhase.value) {\n        case '오픈 전':\n          return 'phase-open';\n        case '채용 중':\n          return 'phase-in-progress';\n        case '채용 마감':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    });\n    const onMoveDetailPageClick = postId => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params: {\n          id: postId\n        }\n      });\n    };\n    return {\n      jopPostingCount,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchInput,\n      viewType,\n      searchJopPosting,\n      onMoveDetailPageClick\n    };\n  }\n};","map":{"version":3,"names":["useRoute","useRouter","computed","onMounted","ref","ROUTES","name","setup","router","route","viewType","params","console","log","today","Date","searchInput","jopPostingCount","startDate","endDate","searchJopPosting","value","fetchJopPosting","data","userName","userPhoneNumber","userImg","require","userEmail","introduction","recruitmentPhase","recruitmentPhaseClass","onMoveDetailPageClick","postId","push","JOB_POSTING_DETAIL","id"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/JobPostingsPage.vue"],"sourcesContent":["<script>\nimport {useRoute, useRouter} from 'vue-router';\nimport {computed, onMounted, ref} from \"vue\";\nimport {ROUTES} from \"@/router/routes\";\n\nexport default {\n  name: \"JobPostingsPage\",\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType\n    console.log(viewType);\n    const today = new Date();\n\n    const searchInput = ref(\"\");\n    const jopPostingCount = ref(2);\n    const startDate = ref(new Date('2024-11-01'));  // 채용 시작일\n    const endDate = ref(new Date('2024-11-15'));    // 채용 마감일\n\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    }\n\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          userName: '이승준',\n          userPhoneNumber: '010-1111-1111',\n          userImg: require('@/assets/images/logo/id_photo_sample.png'), // 이미지 경로를 require로 수정\n          userEmail: 'test@example.com',\n          introduction: '자기소개 내용입니다.'\n        },\n      ];\n\n    }\n\n    onMounted(() => {\n      fetchJopPosting();\n    })\n\n    const recruitmentPhase = computed(() => {\n      if (today < startDate.value) {\n        return '오픈 전';\n      } else if (today <= endDate.value) {\n        return '채용 중';\n      } else {\n        return '채용 마감';\n      }\n    });\n\n    const recruitmentPhaseClass = computed(() => {\n      switch (recruitmentPhase.value) {\n        case '오픈 전':\n          return 'phase-open';\n        case '채용 중':\n          return 'phase-in-progress';\n        case '채용 마감':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    });\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    return {\n      jopPostingCount,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchInput,\n      viewType,\n      searchJopPosting,\n      onMoveDetailPageClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">채용 공고</div>\n    <div class=\"search-wrap\">\n      <input\n          class=\"search-input\"\n          placeholder=\"기업명을 입력하세요\"\n          type=\"text\"\n          v-model=\"searchInput\"\n          @keyup.enter=\"searchJopPosting\"\n      >\n      <div class=\"filter-section\">\n        <div class=\"filter-item\">직무</div>\n        <div class=\"filter-item\">지역</div>\n      </div>\n    </div>\n    <div class=\"recommended-section\" v-if=\"viewType === 'new'\">\n      <div class=\"recommended-title\">추천 공고</div>\n      <div class=\"recommended-content\"></div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">우리바운디</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass]\">{{ recruitmentPhase }}</div>\n        </div>\n        <div class=\"course-subtitle\">시니어도 할 수 있는 Chat GPT</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">08월 01일(월) ~ 11월 10일(일)  &nbsp;&nbsp; 상암동</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(1)\">\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  font-size: 16px;\n  width: 100%;\n  padding: 10px 30px 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  box-sizing: border-box;\n  background-image: url('@/assets/images/icons/search.png');\n  background-size: 20px 20px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.filter-item {\n  flex: 1;\n  text-align: center;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #413F42;\n  border-radius: 8px;\n  background-color: #ffffff;\n  height: 16px;\n  margin-right: 10px;\n}\n\n.filter-item:last-child {\n  margin-right: 0;\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2; /* 오픈 전 - 녹색 */\n}\n\n.phase-in-progress {\n  background-color: #FF9800; /* 채용 중 - 주황색 */\n}\n\n.phase-closed {\n  background-color: #686D76; /* 채용 마감 - 빨간색 */\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n\n.recommended-section {\n  margin-top: 10px;\n}\n\n.recommended-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.recommended-content {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  height: 150px;\n}\n</style>"],"mappings":";AACA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,YAAY;AAC9C,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAC5C,SAAQC,MAAM,QAAO,iBAAiB;AAEtC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,KAAI,GAAIT,QAAQ,CAAC,CAAC;IACxB,MAAMU,QAAO,GAAID,KAAK,CAACE,MAAM,CAACD,QAAO;IACrCE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB,MAAMI,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;IAExB,MAAMC,WAAU,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMa,eAAc,GAAIb,GAAG,CAAC,CAAC,CAAC;IAC9B,MAAMc,SAAQ,GAAId,GAAG,CAAC,IAAIW,IAAI,CAAC,YAAY,CAAC,CAAC,EAAG;IAChD,MAAMI,OAAM,GAAIf,GAAG,CAAC,IAAIW,IAAI,CAAC,YAAY,CAAC,CAAC,EAAK;;IAEhD,MAAMK,gBAAe,GAAIA,CAAA,KAAM;MAC7B;MACAR,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEG,WAAW,CAACK,KAAK,CAAC;IACxC;IAEA,MAAMC,eAAc,GAAIA,CAAA,KAAM;MAC5B;MACA;;MAEA,MAAMC,IAAG,GAAI,CACX;QACEC,QAAQ,EAAE,KAAK;QACfC,eAAe,EAAE,eAAe;QAChCC,OAAO,EAAEC,OAAO,CAAC,0CAA0C,CAAC;QAAE;QAC9DC,SAAS,EAAE,kBAAkB;QAC7BC,YAAY,EAAE;MAChB,CAAC,CACF;IAEH;IAEA1B,SAAS,CAAC,MAAM;MACdmB,eAAe,CAAC,CAAC;IACnB,CAAC;IAED,MAAMQ,gBAAe,GAAI5B,QAAQ,CAAC,MAAM;MACtC,IAAIY,KAAI,GAAII,SAAS,CAACG,KAAK,EAAE;QAC3B,OAAO,MAAM;MACf,OAAO,IAAIP,KAAI,IAAKK,OAAO,CAACE,KAAK,EAAE;QACjC,OAAO,MAAM;MACf,OAAO;QACL,OAAO,OAAO;MAChB;IACF,CAAC,CAAC;IAEF,MAAMU,qBAAoB,GAAI7B,QAAQ,CAAC,MAAM;MAC3C,QAAQ4B,gBAAgB,CAACT,KAAK;QAC5B,KAAK,MAAM;UACT,OAAO,YAAY;QACrB,KAAK,MAAM;UACT,OAAO,mBAAmB;QAC5B,KAAK,OAAO;UACV,OAAO,cAAc;QACvB;UACE,OAAO,EAAE;MACb;IACF,CAAC,CAAC;IAEF,MAAMW,qBAAoB,GAAKC,MAAM,IAAK;MACxCrB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoB,MAAM,CAAC;MAC9BzB,MAAM,CAAC0B,IAAI,CAAC;QACV5B,IAAI,EAAED,MAAM,CAAC8B,kBAAkB,CAAC7B,IAAI;QACpCK,MAAM,EAAC;UACLyB,EAAE,EAAEH;QACN;MACF,CAAC;IACH;IAEA,OAAO;MACLhB,eAAe;MACfa,gBAAgB;MAChBC,qBAAqB;MACrBf,WAAW;MACXN,QAAQ;MACRU,gBAAgB;MAChBY;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}