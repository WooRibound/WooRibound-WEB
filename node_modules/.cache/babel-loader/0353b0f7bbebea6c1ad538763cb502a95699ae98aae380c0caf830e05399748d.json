{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref } from \"vue\";\nimport { formatDate } from \"@/utils/format\";\nimport { ROUTES } from \"@/router/routes\";\nimport { useRouter } from \"vue-router\";\nimport SearchFilterModal from \"@/components/SearchFilterModal.vue\";\nimport { SEARCH_FILTER_TYPES } from \"@/constants/searchFilterTypes\";\nexport default {\n  name: \"EducationApplication\",\n  computed: {\n    SEARCH_FILTER_TYPES() {\n      return SEARCH_FILTER_TYPES;\n    }\n  },\n  components: {\n    SearchFilterModal\n  },\n  methods: {\n    formatDate\n  },\n  setup() {\n    const router = useRouter();\n    const modalPopupStatue = ref(false);\n    const searchInput = ref(\"\");\n    const filterTypes = ref(\"\");\n    const educationCount = ref(0);\n    const educationList = ref();\n    const selectedProvince = ref(\"전체 지역\");\n    const searchEducation = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    };\n    const fetchEducation = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [{\n        eduId: 1,\n        eduHost: '우리 바운디',\n        eduName: '시니어도 할 수 있는 Ghat GPT',\n        eduJob: '서비스',\n        eduImg: require('@/assets/images/logo/education_sample.png'),\n        startDate: '2024-11-01',\n        endDate: '2024-11-15',\n        eduCity: '서울특별시'\n      }, {\n        eduId: 2,\n        eduHost: '우리 마음 데스크',\n        eduName: '시니어도 할 수 있는 EXCEL',\n        eduJob: '서비스',\n        eduImg: require('@/assets/images/logo/education_sample.png'),\n        startDate: '2024-11-01',\n        endDate: '2024-11-15',\n        eduCity: '부산광역시'\n      }];\n      educationList.value = data;\n      educationCount.value = educationList.value.length;\n    };\n    onMounted(() => {\n      fetchEducation();\n    });\n    const onMoveDetailPageClick = eduId => {\n      console.log(\"postId:\", eduId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params: {\n          id: eduId\n        }\n      });\n    };\n    const onFilterClick = filterType => {\n      filterTypes.value = filterType;\n      modalPopupStatue.value = true;\n    };\n    const handleSelectProvince = selected => {\n      console.log(\"선택된 필터:\", selected);\n      selectedProvince.value = selected.province;\n    };\n    return {\n      modalPopupStatue,\n      searchInput,\n      filterTypes,\n      educationCount,\n      educationList,\n      selectedProvince,\n      searchEducation,\n      onMoveDetailPageClick,\n      onFilterClick,\n      handleSelectProvince\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","formatDate","ROUTES","useRouter","SearchFilterModal","SEARCH_FILTER_TYPES","name","computed","components","methods","setup","router","modalPopupStatue","searchInput","filterTypes","educationCount","educationList","selectedProvince","searchEducation","console","log","value","fetchEducation","data","eduId","eduHost","eduName","eduJob","eduImg","require","startDate","endDate","eduCity","length","onMoveDetailPageClick","push","JOB_POSTING_DETAIL","params","id","onFilterClick","filterType","handleSelectProvince","selected","province"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/EducationApplication.vue"],"sourcesContent":["<script>\nimport {onMounted, ref} from \"vue\";\nimport { formatDate } from \"@/utils/format\";\nimport { ROUTES } from \"@/router/routes\";\nimport { useRouter } from \"vue-router\";\nimport SearchFilterModal from \"@/components/SearchFilterModal.vue\";\nimport {SEARCH_FILTER_TYPES} from \"@/constants/searchFilterTypes\";\n\nexport default {\n  name: \"EducationApplication\",\n  computed: {\n    SEARCH_FILTER_TYPES() {\n      return SEARCH_FILTER_TYPES\n    }\n  },\n  components: { SearchFilterModal },\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n\n    const modalPopupStatue = ref(false);\n    const searchInput = ref(\"\");\n    const filterTypes = ref(\"\");\n    const educationCount = ref(0);\n    const educationList = ref();\n    const selectedProvince = ref(\"전체 지역\");\n\n    const searchEducation = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    }\n\n    const fetchEducation = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          eduId: 1,\n          eduHost: '우리 바운디',\n          eduName: '시니어도 할 수 있는 Ghat GPT',\n          eduJob: '서비스',\n          eduImg: require('@/assets/images/logo/education_sample.png'),\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          eduCity: '서울특별시',\n        },\n        {\n          eduId: 2,\n          eduHost: '우리 마음 데스크',\n          eduName: '시니어도 할 수 있는 EXCEL',\n          eduJob: '서비스',\n          eduImg: require('@/assets/images/logo/education_sample.png'),\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          eduCity: '부산광역시',\n        },\n      ];\n\n      educationList.value = data;\n      educationCount.value = educationList.value.length;\n    }\n\n    onMounted(() => {\n      fetchEducation();\n    })\n\n    const onMoveDetailPageClick = (eduId) => {\n      console.log(\"postId:\", eduId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: eduId\n        },\n      })\n    }\n\n    const onFilterClick = (filterType) => {\n      filterTypes.value = filterType;\n      modalPopupStatue.value = true;\n    }\n\n    const handleSelectProvince = (selected) => {\n      console.log(\"선택된 필터:\", selected);\n      selectedProvince.value = selected.province;\n    }\n\n    return {\n      modalPopupStatue,\n      searchInput,\n      filterTypes,\n      educationCount,\n      educationList,\n      selectedProvince,\n      searchEducation,\n      onMoveDetailPageClick,\n      onFilterClick,\n      handleSelectProvince,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">교육 신청</div>\n    <div class=\"recommended-section\">\n      <div class=\"recommended-title\">추천 교육</div>\n      <div class=\"recommended-content\"></div>\n    </div>\n    <div class=\"search-wrap\">\n      <input\n          class=\"search-input\"\n          placeholder=\"교육명을 입력하세요\"\n          type=\"text\"\n          v-model=\"searchInput\"\n          @keyup.enter=\"searchEducation\"\n      >\n      <div class=\"filter-section\">\n        <div class=\"filter-item\"\n             @click=\"onFilterClick(SEARCH_FILTER_TYPES.JOB)\"\n             :style=\"{ color: selectedProvince === '전체' ? 'black' : selectedProvince === '지역' ? '#1A4870' : 'black' }\">\n          전체 직무\n        </div>\n        <div class=\"filter-item\"\n             @click=\"onFilterClick(SEARCH_FILTER_TYPES.REGIONS)\"\n             :style=\"{ color: selectedProvince === '전체 지역' ? 'black' : '#024CAA' }\">\n          {{ selectedProvince }}\n        </div>\n      </div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ educationCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"education in educationList\" :key=\"education\">\n        <div class=\"course-title\">{{ education.eduHost }}</div>\n        <div class=\"course-subtitle\">{{ education.eduHost }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(education.startDate)) }} ~ {{ formatDate(new Date(education.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(education.eduId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n  <search-filter-modal\n      v-if=\"modalPopupStatue\"\n      @close-modal=\"modalPopupStatue = false\"\n      @select-province=\"handleSelectProvince\"\n      :filter-type=\"filterTypes\"\n  />\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.search-wrap {\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n.search-input {\n  font-size: 16px;\n  width: 100%;\n  padding: 10px 30px 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  box-sizing: border-box;\n  background-image: url('@/assets/images/icons/search.png');\n  background-size: 20px 20px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.filter-item {\n  flex: 1;\n  text-align: center;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #413F42;\n  border-radius: 8px;\n  background-color: #ffffff;\n  height: 16px;\n  margin-right: 10px;\n  cursor: pointer;\n}\n\n.filter-item:last-child {\n  margin-right: 0;\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n\n.recommended-section {\n  margin-top: 10px;\n}\n\n.recommended-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.recommended-content {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  height: 150px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}