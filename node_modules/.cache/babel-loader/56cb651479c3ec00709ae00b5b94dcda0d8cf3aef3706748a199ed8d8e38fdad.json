{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { formatDate } from \"@/utils/format\";\nexport default {\n  name: \"EducationApplicationDetail\",\n  setup() {\n    const route = useRoute();\n    const postId = route.params.id;\n    const entName = ref(\"우리바운디\");\n    const postTitle = ref(\"시니어도 할 수 있는 Chat GPT\");\n    const postImg = require(\"@/assets/images/logo/education_sample.png\");\n    const startDate = ref(new Date('2024-11-01')); // 채용 시작일\n    const endDate = ref(new Date('2024-11-15')); // 채용 마감일\n    const entAddr = ref(\"상암동\");\n    const formattedStartDate = computed(() => formatDate(startDate.value));\n    const formattedEndDate = computed(() => formatDate(endDate.value));\n    const education = ref();\n    const fetchEducationDetail = () => {\n      // todo postId값으로 채용공고 상세 API 구현 후 아래에 로직 구현\n      console.log(postId);\n      const data = {\n        entName: '우리바운디',\n        postTitle: '시니어도 할 수 있는 Chat GPT',\n        postImg: require('@/assets/images/logo/education_sample.png'),\n        startDate: '2024-11-01',\n        endDate: '2024-11-05',\n        entAddr: '상암동'\n      };\n      education.value = data;\n    };\n    onMounted(() => {\n      fetchEducationDetail();\n    });\n    return {\n      entName,\n      postTitle,\n      postImg,\n      formattedStartDate,\n      formattedEndDate,\n      entAddr,\n      education\n    };\n  }\n};","map":{"version":3,"names":["useRoute","computed","onMounted","ref","formatDate","name","setup","route","postId","params","id","entName","postTitle","postImg","require","startDate","Date","endDate","entAddr","formattedStartDate","value","formattedEndDate","education","fetchEducationDetail","console","log","data"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/EducationApplicationDetail.vue"],"sourcesContent":["<script>\nimport {useRoute} from \"vue-router\";\nimport {computed, onMounted, ref} from \"vue\";\nimport {formatDate} from \"@/utils/format\";\n\nexport default {\n  name: \"EducationApplicationDetail\",\n  setup() {\n    const route = useRoute();\n    const postId = route.params.id\n\n    const entName = ref(\"우리바운디\");\n    const postTitle = ref(\"시니어도 할 수 있는 Chat GPT\");\n    const postImg = require(\"@/assets/images/logo/education_sample.png\");\n    const startDate = ref(new Date('2024-11-01'));  // 채용 시작일\n    const endDate = ref(new Date('2024-11-15'));    // 채용 마감일\n    const entAddr = ref(\"상암동\");\n\n    const formattedStartDate = computed(() => formatDate(startDate.value));\n    const formattedEndDate = computed(() => formatDate(endDate.value));\n\n    const education = ref();\n\n    const fetchEducationDetail = () => {\n      // todo postId값으로 채용공고 상세 API 구현 후 아래에 로직 구현\n      console.log(postId);\n\n      const data = {\n        entName: '우리바운디',\n        postTitle: '시니어도 할 수 있는 Chat GPT',\n        postImg: require('@/assets/images/logo/education_sample.png'),\n        startDate: '2024-11-01',\n        endDate: '2024-11-05',\n        entAddr: '상암동',\n      }\n\n      education.value = data;\n    }\n\n    onMounted(() => {\n      fetchEducationDetail();\n    })\n\n    return {\n      entName,\n      postTitle,\n      postImg,\n      formattedStartDate,\n      formattedEndDate,\n      entAddr,\n      education,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"job-posting-detail\">\n    <div class=\"job-posting-header\">교육공고 상세페이지</div>\n    <div class=\"job-posting-content\">\n      <div class=\"company-logo\">\n        <img :src=\"postImg\" alt=\"Company Logo\">\n      </div>\n      <div class=\"job-posting-info\">\n        <div class=\"company-name\">{{ entName }}</div>\n        <div class=\"job-title\">{{ postTitle }}</div>\n        <div class=\"application-period\">교육 접수</div>\n        <div class=\"application-dates\">{{ formattedStartDate }} ~ {{ formattedEndDate }}</div>\n        <div class=\"company-address-label\">교육장 주소</div>\n        <div class=\"company-address\">{{ entAddr }}</div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.job-posting-detail {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.job-posting-header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.job-posting-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.company-logo {\n  height: 300px;\n  border-radius: 10px 10px 0 0; /* 꼭지점 둥글게 */\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f1f1f1;    /* 배경색으로 지정 */\n}\n\n.company-logo img {\n  max-height: 100%;            /* 높이에 맞춰 이미지 크기 조절 */\n  max-width: 100%;             /* 너비에 맞춰 이미지 크기 조절 */\n}\n\n.job-posting-info {\n  padding: 20px;\n  margin-top: 30px;\n  border-left: 2px solid #ccc;\n}\n\n.job-posting-info div {\n  margin-bottom: 10px;\n}\n\n.company-name {\n  font-size: 25px;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.job-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.application-period {\n  font-size: 16px;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\n.application-dates {\n  font-size: 16px;\n  color: #333; /* 기존 색상과 통일 */\n  margin-bottom: 10px; /* 아래쪽 여백 */\n}\n\n.company-address-label {\n  font-size: 16px;\n  margin-top: 10px; /* 위쪽 여백 추가 */\n  font-weight: bold;\n}\n\n.company-address {\n  font-size: 16px;\n  color: #333;\n}\n</style>\n"],"mappings":"AACA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAC5C,SAAQC,UAAU,QAAO,gBAAgB;AAEzC,eAAe;EACbC,IAAI,EAAE,4BAA4B;EAClCC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,EAAC;IAE7B,MAAMC,OAAM,GAAIR,GAAG,CAAC,OAAO,CAAC;IAC5B,MAAMS,SAAQ,GAAIT,GAAG,CAAC,sBAAsB,CAAC;IAC7C,MAAMU,OAAM,GAAIC,OAAO,CAAC,2CAA2C,CAAC;IACpE,MAAMC,SAAQ,GAAIZ,GAAG,CAAC,IAAIa,IAAI,CAAC,YAAY,CAAC,CAAC,EAAG;IAChD,MAAMC,OAAM,GAAId,GAAG,CAAC,IAAIa,IAAI,CAAC,YAAY,CAAC,CAAC,EAAK;IAChD,MAAME,OAAM,GAAIf,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMgB,kBAAiB,GAAIlB,QAAQ,CAAC,MAAMG,UAAU,CAACW,SAAS,CAACK,KAAK,CAAC,CAAC;IACtE,MAAMC,gBAAe,GAAIpB,QAAQ,CAAC,MAAMG,UAAU,CAACa,OAAO,CAACG,KAAK,CAAC,CAAC;IAElE,MAAME,SAAQ,GAAInB,GAAG,CAAC,CAAC;IAEvB,MAAMoB,oBAAmB,GAAIA,CAAA,KAAM;MACjC;MACAC,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;MAEnB,MAAMkB,IAAG,GAAI;QACXf,OAAO,EAAE,OAAO;QAChBC,SAAS,EAAE,sBAAsB;QACjCC,OAAO,EAAEC,OAAO,CAAC,2CAA2C,CAAC;QAC7DC,SAAS,EAAE,YAAY;QACvBE,OAAO,EAAE,YAAY;QACrBC,OAAO,EAAE;MACX;MAEAI,SAAS,CAACF,KAAI,GAAIM,IAAI;IACxB;IAEAxB,SAAS,CAAC,MAAM;MACdqB,oBAAoB,CAAC,CAAC;IACxB,CAAC;IAED,OAAO;MACLZ,OAAO;MACPC,SAAS;MACTC,OAAO;MACPM,kBAAkB;MAClBE,gBAAgB;MAChBH,OAAO;MACPI;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}