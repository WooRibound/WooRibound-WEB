{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRoute, useRouter } from 'vue-router';\nimport { onMounted, ref } from \"vue\";\nimport { ROUTES } from \"@/router/routes\";\nimport { formatDate } from \"@/utils/format\";\nimport SearchFilterModal from \"@/components/SearchFilterModal.vue\";\nimport { SEARCH_FILTER_TYPES } from \"@/constants/searchFilterTypes\";\nexport default {\n  name: \"JobPostingsPage\",\n  computed: {\n    SEARCH_FILTER_TYPES() {\n      return SEARCH_FILTER_TYPES;\n    }\n  },\n  components: {\n    SearchFilterModal\n  },\n  methods: {\n    formatDate\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType;\n    console.log(viewType);\n    const modalPopupStatue = ref(false);\n    const searchInput = ref(\"\");\n    const filterTypes = ref(\"\");\n    const selectedProvince = ref(\"전체 지역\");\n    const jopPostingCount = ref(0);\n    const jobPostingList = ref();\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    };\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [{\n        postId: 1,\n        entId: 1,\n        postTitle: '2024년 하반기 시니어 개발자 모집',\n        entName: '우리 바운드 (주)',\n        jobName: '서비스',\n        postImg: require('@/assets/images/logo/company_sample.png'),\n        // 이미지 경로를 require로 수정\n        startDate: '2024-11-01',\n        endDate: '2024-11-15',\n        postState: 'ACTIVE'\n      }];\n      jobPostingList.value = data;\n      jopPostingCount.value = jobPostingList.value.length;\n    };\n    onMounted(() => {\n      fetchJopPosting();\n    });\n    const recruitmentPhase = postState => {\n      switch (postState) {\n        case 'PENDING':\n          return '오픈 전';\n        case 'ACTIVE':\n          return '채용 중';\n        case 'CLOSED':\n          return '채용 마감';\n        default:\n          return '';\n      }\n    };\n    const recruitmentPhaseClass = postState => {\n      switch (postState) {\n        case 'PENDING':\n          return 'phase-open';\n        case 'ACTIVE':\n          return 'phase-in-progress';\n        case 'CLOSED':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    };\n    const onMoveDetailPageClick = postId => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params: {\n          id: postId\n        }\n      });\n    };\n    const onFilterClick = filterType => {\n      filterTypes.value = filterType;\n      modalPopupStatue.value = true;\n    };\n    const handleSelectProvince = selected => {\n      console.log(\"선택된 필터:\", selected);\n      selectedProvince.value = selected.province;\n    };\n    return {\n      modalPopupStatue,\n      filterTypes,\n      viewType,\n      searchInput,\n      jopPostingCount,\n      jobPostingList,\n      selectedProvince,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchJopPosting,\n      onMoveDetailPageClick,\n      onFilterClick,\n      handleSelectProvince\n    };\n  }\n};","map":{"version":3,"names":["useRoute","useRouter","onMounted","ref","ROUTES","formatDate","SearchFilterModal","SEARCH_FILTER_TYPES","name","computed","components","methods","setup","router","route","viewType","params","console","log","modalPopupStatue","searchInput","filterTypes","selectedProvince","jopPostingCount","jobPostingList","searchJopPosting","value","fetchJopPosting","data","postId","entId","postTitle","entName","jobName","postImg","require","startDate","endDate","postState","length","recruitmentPhase","recruitmentPhaseClass","onMoveDetailPageClick","push","JOB_POSTING_DETAIL","id","onFilterClick","filterType","handleSelectProvince","selected","province"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/JobPostingsPage.vue"],"sourcesContent":["<script>\nimport { useRoute, useRouter } from 'vue-router';\nimport { onMounted, ref } from \"vue\";\nimport { ROUTES } from \"@/router/routes\";\nimport { formatDate } from \"@/utils/format\";\nimport SearchFilterModal from \"@/components/SearchFilterModal.vue\";\nimport {SEARCH_FILTER_TYPES} from \"@/constants/searchFilterTypes\";\n\nexport default {\n  name: \"JobPostingsPage\",\n  computed: {\n    SEARCH_FILTER_TYPES() {\n      return SEARCH_FILTER_TYPES\n    }\n  },\n  components: { SearchFilterModal },\n    methods: { formatDate },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType\n    console.log(viewType);\n\n    const modalPopupStatue = ref(false);\n    const searchInput = ref(\"\");\n    const filterTypes = ref(\"\");\n    const selectedProvince = ref(\"전체 지역\");\n\n    const jopPostingCount = ref(0);\n    const jobPostingList = ref();\n\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    }\n\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n      ];\n\n      jobPostingList.value = data;\n      jopPostingCount.value = jobPostingList.value.length;\n    }\n\n    onMounted(() => {\n      fetchJopPosting();\n    })\n\n    const recruitmentPhase = (postState) => {\n      switch (postState) {\n        case 'PENDING':\n          return '오픈 전';\n        case 'ACTIVE':\n          return '채용 중';\n        case 'CLOSED':\n          return '채용 마감';\n        default:\n          return '';\n      }\n    }\n\n    const recruitmentPhaseClass = (postState) => {\n      switch (postState) {\n        case 'PENDING':\n          return 'phase-open';\n        case 'ACTIVE':\n          return 'phase-in-progress';\n        case 'CLOSED':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    }\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    const onFilterClick = (filterType) => {\n      filterTypes.value = filterType;\n      modalPopupStatue.value = true;\n    }\n\n    const handleSelectProvince = (selected) => {\n      console.log(\"선택된 필터:\", selected);\n      selectedProvince.value = selected.province;\n    }\n\n    return {\n      modalPopupStatue,\n      filterTypes,\n      viewType,\n      searchInput,\n      jopPostingCount,\n      jobPostingList,\n      selectedProvince,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchJopPosting,\n      onMoveDetailPageClick,\n      onFilterClick,\n      handleSelectProvince,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">채용 공고</div>\n    <div class=\"search-wrap\">\n      <input\n          class=\"search-input\"\n          placeholder=\"기업명을 입력하세요\"\n          type=\"text\"\n          v-model=\"searchInput\"\n          @keyup.enter=\"searchJopPosting\"\n      >\n      <div class=\"filter-section\">\n        <div class=\"filter-item\"\n             @click=\"onFilterClick(SEARCH_FILTER_TYPES.JOB)\"\n             :style=\"{ color: selectedProvince === '전체' ? 'black' : selectedProvince === '지역' ? '#1A4870' : 'black' }\">\n          전체 직무\n        </div>\n        <div class=\"filter-item\"\n             @click=\"onFilterClick(SEARCH_FILTER_TYPES.REGIONS)\"\n             :style=\"{ color: selectedProvince === '전체 지역' ? 'black' : '#024CAA' }\">\n          {{ selectedProvince }}\n        </div>\n      </div>\n    </div>\n    <div class=\"recommended-section\" v-if=\"viewType === 'new'\">\n      <div class=\"recommended-title\">추천 공고</div>\n      <div class=\"recommended-content\"></div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"jobPosting in jobPostingList\" :key=\"jobPosting\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">{{ jobPosting.entName }}</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass(jobPosting.postState)]\">{{ recruitmentPhase(jobPosting.postState) }}</div>\n        </div>\n        <div class=\"course-subtitle\">{{ jobPosting.postTitle }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(jobPosting.startDate)) }} ~ {{ formatDate(new Date(jobPosting.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(jobPosting.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n  <search-filter-modal\n      v-if=\"modalPopupStatue\"\n      @close-modal=\"modalPopupStatue = false\"\n      @select-province=\"handleSelectProvince\"\n      :filter-type=\"filterTypes\"\n  />\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  font-size: 16px;\n  width: 100%;\n  padding: 10px 30px 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  box-sizing: border-box;\n  background-image: url('@/assets/images/icons/search.png');\n  background-size: 20px 20px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.filter-item {\n  flex: 1;\n  text-align: center;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #413F42;\n  border-radius: 8px;\n  background-color: #ffffff;\n  height: 16px;\n  margin-right: 10px;\n}\n\n.filter-item:last-child {\n  margin-right: 0;\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2;\n}\n\n.phase-in-progress {\n  background-color: #FF9800;\n}\n\n.phase-closed {\n  background-color: #686D76;\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n\n.recommended-section {\n  margin-top: 10px;\n}\n\n.recommended-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.recommended-content {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  height: 150px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}