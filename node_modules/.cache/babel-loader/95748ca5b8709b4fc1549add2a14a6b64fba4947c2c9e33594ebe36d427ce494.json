{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nimport _imports_0 from '@/assets/images/icons/rightarrows.png';\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"job-posting-wrap\"\n};\nconst _hoisted_4 = {\n  class: \"job-posting-info\"\n};\nconst _hoisted_5 = {\n  class: \"job-posting-list-top\"\n};\nconst _hoisted_6 = {\n  class: \"course-title\"\n};\nconst _hoisted_7 = {\n  class: \"job-posting-list-middle\"\n};\nconst _hoisted_8 = {\n  class: \"course-subtitle\"\n};\nconst _hoisted_9 = {\n  class: \"course-schedule\"\n};\nconst _hoisted_10 = {\n  class: \"schedule-info\"\n};\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"header-title\"\n  }, \"공고 관리\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: \"header-register-job\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.onRegisterJobPostingClick && $setup.onRegisterJobPostingClick(...args))\n  }, \"공고 등록\")]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.jopPostingCount) + \"건\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.jobPostingList, jobPosting => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"job-posting-list\",\n      key: jobPosting\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(jobPosting.entName), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: _normalizeClass(['recruitment-phase', $setup.recruitmentPhaseClass(jobPosting.postState)])\n    }, _toDisplayString($setup.recruitmentPhase(jobPosting.postState)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(jobPosting.postTitle), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n      class: \"applicants-info\"\n    }, \"3명\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($options.formatDate(new Date(jobPosting.startDate))) + \" ~ \" + _toDisplayString($options.formatDate(new Date(jobPosting.endDate))), 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: _imports_0,\n      class: \"right-arrow-icon\",\n      alt: \"Right Arrow Icon\",\n      onClick: $event => $setup.onMoveDetailPageClick(jobPosting.postId)\n    }, null, 8 /* PROPS */, _hoisted_11)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","onRegisterJobPostingClick","_hoisted_3","_hoisted_4","_toDisplayString","jopPostingCount","_Fragment","_renderList","jobPostingList","jobPosting","key","_hoisted_5","_hoisted_6","entName","_normalizeClass","recruitmentPhaseClass","postState","recruitmentPhase","_hoisted_7","_hoisted_8","postTitle","_hoisted_9","_hoisted_10","$options","formatDate","Date","startDate","endDate","src","alt","$event","onMoveDetailPageClick","postId","_hoisted_11"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/CorporateUser/JobPostingManagement.vue"],"sourcesContent":["<script>\nimport {useRouter} from \"vue-router\";\nimport {ROUTES} from \"@/router/routes\";\nimport {formatDate} from \"@/utils/format\";\nimport {onMounted, ref} from \"vue\";\n\nexport default {\n  name: \"JobPostingManagement\",\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n\n    const jopPostingCount = ref(0);\n    const jobPostingList = ref();\n    const onRegisterJobPostingClick = () => {\n      router.push(ROUTES.JOB_POSTING_REGISTER.path);\n    }\n\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n      ];\n\n      jobPostingList.value = data;\n      jopPostingCount.value = jobPostingList.value.length;\n    }\n\n    onMounted(() => {\n      fetchJopPosting();\n    })\n\n    const recruitmentPhase = (postState) => {\n      switch (postState) {\n        case 'PENDING':\n          return '오픈 전';\n        case 'ACTIVE':\n          return '채용 중';\n        case 'CLOSED':\n          return '채용 마감';\n        default:\n          return '';\n      }\n    }\n\n    const recruitmentPhaseClass = (postState) => {\n      switch (postState) {\n        case 'PENDING':\n          return 'phase-open';\n        case 'ACTIVE':\n          return 'phase-in-progress';\n        case 'CLOSED':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    }\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    return {\n      jopPostingCount,\n      jobPostingList,\n      onRegisterJobPostingClick,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      onMoveDetailPageClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">\n      <div class=\"header-title\">공고 관리</div>\n      <div class=\"header-register-job\" @click=\"onRegisterJobPostingClick\">공고 등록</div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"jobPosting in jobPostingList\" :key=\"jobPosting\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">{{ jobPosting.entName }}</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass(jobPosting.postState)]\">{{ recruitmentPhase(jobPosting.postState) }}</div>\n        </div>\n        <div class=\"job-posting-list-middle\">\n          <div class=\"course-subtitle\">{{ jobPosting.postTitle }}</div>\n          <div class=\"applicants-info\">3명</div>\n        </div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(jobPosting.startDate)) }} ~ {{ formatDate(new Date(jobPosting.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(jobPosting.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between; /* 두 요소를 양 끝에 배치 */\n  align-items: center; /* 세로 정렬을 가운데로 */\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.header-register-job {\n  background-color: #024CAA; /* 버튼 배경색 */\n  color: white; /* 버튼 텍스트 색 */\n  padding: 10px 15px; /* 여백 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 포인터 커서 */\n  transition: background-color 0.3s; /* 호버 효과를 위한 전환 */\n  font-size: 10pt;\n}\n\n.header-register-job:hover {\n  background-color: #0056b3; /* 호버 시 배경색 변경 */\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2;\n}\n\n.phase-in-progress {\n  background-color: #FF9800;\n}\n\n.phase-closed {\n  background-color: #686D76;\n}\n\n.job-posting-list-middle {\n  display: flex;                  /* Flexbox를 사용 */\n  justify-content: space-between; /* 두 요소를 양 끝에 배치 */\n  align-items: center;            /* 세로 정렬을 가운데로 */\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n  flex: 1;\n}\n\n.applicants-info {\n  font-size: 20px;           /* 글자 크기 */\n  color: #666;               /* 텍스트 색상 */\n  margin-top: 8px;          /* 위쪽 여백 */\n  margin-bottom: 8px;          /* 위쪽 여백 */\n  margin-right: 10px;          /* 위쪽 여백 */\n  cursor: pointer;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n</style>"],"mappings":";OA+GeA,UAA2C;;EAlBlDC,KAAK,EAAC;AAAM;;EACXA,KAAK,EAAC;AAAQ;;EAIdA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAc;;EAGtBA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAiB;;EAGzBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAe;oBA9GpC;;uBA6FEC,mBAAA,CAsBO,QAtBPC,UAsBO,GArBLC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAqC;IAAhCH,KAAK,EAAC;EAAc,GAAC,OAAK,sBAC/BG,mBAAA,CAA+E;IAA1EH,KAAK,EAAC,qBAAqB;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,yBAAA,IAAAD,MAAA,CAAAC,yBAAA,IAAAF,IAAA,CAAyB;KAAE,OAAK,E,GAE3EJ,mBAAA,CAgBM,OAhBNO,UAgBM,GAfJP,mBAAA,CAA0D,OAA1DQ,UAA0D,EAAAC,gBAAA,CAAzBJ,MAAA,CAAAK,eAAe,IAAG,GAAC,kB,kBACpDZ,mBAAA,CAaMa,SAAA,QAjHZC,WAAA,CAoGyDP,MAAA,CAAAQ,cAAc,EAA5BC,UAAU;yBAA/ChB,mBAAA,CAaM;MAbDD,KAAK,EAAC,kBAAkB;MAAuCkB,GAAG,EAAED;QACvEd,mBAAA,CAGM,OAHNgB,UAGM,GAFJhB,mBAAA,CAAwD,OAAxDiB,UAAwD,EAAAR,gBAAA,CAA3BK,UAAU,CAACI,OAAO,kBAC/ClB,mBAAA,CAAmI;MAA7HH,KAAK,EAvGrBsB,eAAA,uBAuG6Cd,MAAA,CAAAe,qBAAqB,CAACN,UAAU,CAACO,SAAS;wBAAOhB,MAAA,CAAAiB,gBAAgB,CAACR,UAAU,CAACO,SAAS,yB,GAE3HrB,mBAAA,CAGM,OAHNuB,UAGM,GAFJvB,mBAAA,CAA6D,OAA7DwB,UAA6D,EAAAf,gBAAA,CAA7BK,UAAU,CAACW,SAAS,kB,0BACpDzB,mBAAA,CAAqC;MAAhCH,KAAK,EAAC;IAAiB,GAAC,IAAE,qB,GAEjCG,mBAAA,CAGM,OAHN0B,UAGM,GAFJ1B,mBAAA,CAAkI,OAAlI2B,WAAkI,EAAAlB,gBAAA,CAApGmB,QAAA,CAAAC,UAAU,KAAKC,IAAI,CAAChB,UAAU,CAACiB,SAAS,MAAK,KAAG,GAAAtB,gBAAA,CAAGmB,QAAA,CAAAC,UAAU,KAAKC,IAAI,CAAChB,UAAU,CAACkB,OAAO,oBACvHhC,mBAAA,CAAmJ;MAA9IiC,GAA2C,EAA3CrC,UAA2C;MAACC,KAAK,EAAC,kBAAkB;MAACqC,GAAG,EAAC,kBAAkB;MAAEhC,OAAK,EAAAiC,MAAA,IAAE9B,MAAA,CAAA+B,qBAAqB,CAACtB,UAAU,CAACuB,MAAM;4BA/G1JC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}