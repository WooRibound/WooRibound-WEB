{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRoute, useRouter } from 'vue-router';\nimport { onMounted, ref } from \"vue\";\nimport { ROUTES } from \"@/router/routes\";\nimport { formatDate } from \"@/utils/format\";\nexport default {\n  name: \"JobPostingsPage\",\n  methods: {\n    formatDate\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType;\n    console.log(viewType);\n    const searchInput = ref(\"\");\n    const jopPostingCount = ref(0);\n    const jobPostingList = ref();\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    };\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [{\n        postId: 1,\n        entId: 1,\n        postTitle: '2024년 하반기 시니어 개발자 모집',\n        entName: '우리 바운드 (주)',\n        jobName: '서비스',\n        postImg: require('@/assets/images/logo/company_sample.png'),\n        // 이미지 경로를 require로 수정\n        startDate: '2024-11-01',\n        endDate: '2024-11-15',\n        postState: 'ACTIVE'\n      }];\n      jobPostingList.value = data;\n      jopPostingCount.value = jobPostingList.value.length;\n    };\n    onMounted(() => {\n      fetchJopPosting();\n    });\n    const recruitmentPhase = postState => {\n      switch (postState) {\n        case 'PENDING':\n          return '오픈 전';\n        case 'ACTIVE':\n          return '채용 중';\n        case 'CLOSED':\n          return '채용 마감';\n        default:\n          return '';\n      }\n    };\n    const recruitmentPhaseClass = postState => {\n      switch (postState) {\n        case 'PENDING':\n          return 'phase-open';\n        case 'ACTIVE':\n          return 'phase-in-progress';\n        case 'CLOSED':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    };\n    const onMoveDetailPageClick = postId => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params: {\n          id: postId\n        }\n      });\n    };\n    return {\n      jopPostingCount,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchInput,\n      viewType,\n      jobPostingList,\n      searchJopPosting,\n      onMoveDetailPageClick\n    };\n  }\n};","map":{"version":3,"names":["useRoute","useRouter","onMounted","ref","ROUTES","formatDate","name","methods","setup","router","route","viewType","params","console","log","searchInput","jopPostingCount","jobPostingList","searchJopPosting","value","fetchJopPosting","data","postId","entId","postTitle","entName","jobName","postImg","require","startDate","endDate","postState","length","recruitmentPhase","recruitmentPhaseClass","onMoveDetailPageClick","push","JOB_POSTING_DETAIL","id"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/JobPostingsPage.vue"],"sourcesContent":["<script>\nimport { useRoute, useRouter } from 'vue-router';\nimport { onMounted, ref } from \"vue\";\nimport { ROUTES } from \"@/router/routes\";\nimport { formatDate } from \"@/utils/format\";\n\nexport default {\n  name: \"JobPostingsPage\",\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const viewType = route.params.viewType\n    console.log(viewType);\n\n    const searchInput = ref(\"\");\n    const jopPostingCount = ref(0);\n    const jobPostingList = ref();\n\n    const searchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      console.log(\"검색어:\", searchInput.value);\n    }\n\n    const fetchJopPosting = () => {\n      // todo 채용공고 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n      ];\n\n      jobPostingList.value = data;\n      jopPostingCount.value = jobPostingList.value.length;\n    }\n\n    onMounted(() => {\n      fetchJopPosting();\n    })\n\n    const recruitmentPhase = (postState) => {\n      switch (postState) {\n        case 'PENDING':\n          return '오픈 전';\n        case 'ACTIVE':\n          return '채용 중';\n        case 'CLOSED':\n          return '채용 마감';\n        default:\n          return '';\n      }\n    }\n\n    const recruitmentPhaseClass = (postState) => {\n      switch (postState) {\n        case 'PENDING':\n          return 'phase-open';\n        case 'ACTIVE':\n          return 'phase-in-progress';\n        case 'CLOSED':\n          return 'phase-closed';\n        default:\n          return '';\n      }\n    }\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    return {\n      jopPostingCount,\n      recruitmentPhase,\n      recruitmentPhaseClass,\n      searchInput,\n      viewType,\n      jobPostingList,\n      searchJopPosting,\n      onMoveDetailPageClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">채용 공고</div>\n    <div class=\"search-wrap\">\n      <input\n          class=\"search-input\"\n          placeholder=\"기업명을 입력하세요\"\n          type=\"text\"\n          v-model=\"searchInput\"\n          @keyup.enter=\"searchJopPosting\"\n      >\n      <div class=\"filter-section\">\n        <div class=\"filter-item\">직무</div>\n        <div class=\"filter-item\">지역</div>\n      </div>\n    </div>\n    <div class=\"recommended-section\" v-if=\"viewType === 'new'\">\n      <div class=\"recommended-title\">추천 공고</div>\n      <div class=\"recommended-content\"></div>\n    </div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"jobPosting in jobPostingList\" :key=\"jobPosting\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">{{ jobPosting.entName }}</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass(jobPosting.postState)]\">{{ recruitmentPhase(jobPosting.postState) }}</div>\n        </div>\n        <div class=\"course-subtitle\">{{ jobPosting.postTitle }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(jobPosting.startDate)) }} ~ {{ formatDate(new Date(jobPosting.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(jobPosting.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  font-size: 16px;\n  width: 100%;\n  padding: 10px 30px 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n  box-sizing: border-box;\n  background-image: url('@/assets/images/icons/search.png');\n  background-size: 20px 20px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.filter-item {\n  flex: 1;\n  text-align: center;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #413F42;\n  border-radius: 8px;\n  background-color: #ffffff;\n  height: 16px;\n  margin-right: 10px;\n}\n\n.filter-item:last-child {\n  margin-right: 0;\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2; /* 오픈 전 - 녹색 */\n}\n\n.phase-in-progress {\n  background-color: #FF9800; /* 채용 중 - 주황색 */\n}\n\n.phase-closed {\n  background-color: #686D76; /* 채용 마감 - 빨간색 */\n}\n\n.course-subtitle {\n  margin-bottom: 5px;\n}\n\n.course-schedule {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.schedule-info {\n  flex: 1;\n}\n\n.right-arrow-icon {\n  width: 20px;\n  height: auto;\n  cursor: pointer;\n}\n\n.recommended-section {\n  margin-top: 10px;\n}\n\n.recommended-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.recommended-content {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  height: 150px;\n}\n</style>"],"mappings":";AACA,SAASA,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAChD,SAASC,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,SAASC,MAAK,QAAS,iBAAiB;AACxC,SAASC,UAAS,QAAS,gBAAgB;AAE3C,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE;IAAEF;EAAW,CAAC;EACvBG,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIR,SAAS,CAAC,CAAC;IAC1B,MAAMS,KAAI,GAAIV,QAAQ,CAAC,CAAC;IACxB,MAAMW,QAAO,GAAID,KAAK,CAACE,MAAM,CAACD,QAAO;IACrCE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IAErB,MAAMI,WAAU,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMa,eAAc,GAAIb,GAAG,CAAC,CAAC,CAAC;IAC9B,MAAMc,cAAa,GAAId,GAAG,CAAC,CAAC;IAE5B,MAAMe,gBAAe,GAAIA,CAAA,KAAM;MAC7B;MACAL,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEC,WAAW,CAACI,KAAK,CAAC;IACxC;IAEA,MAAMC,eAAc,GAAIA,CAAA,KAAM;MAC5B;MACA;;MAEA,MAAMC,IAAG,GAAI,CACX;QACEC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,CAAC;QACRC,SAAS,EAAE,sBAAsB;QACjCC,OAAO,EAAE,YAAY;QACrBC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEC,OAAO,CAAC,yCAAyC,CAAC;QAAE;QAC7DC,SAAS,EAAE,YAAY;QACvBC,OAAO,EAAE,YAAY;QACrBC,SAAS,EAAE;MACb,CAAC,CACF;MAEDd,cAAc,CAACE,KAAI,GAAIE,IAAI;MAC3BL,eAAe,CAACG,KAAI,GAAIF,cAAc,CAACE,KAAK,CAACa,MAAM;IACrD;IAEA9B,SAAS,CAAC,MAAM;MACdkB,eAAe,CAAC,CAAC;IACnB,CAAC;IAED,MAAMa,gBAAe,GAAKF,SAAS,IAAK;MACtC,QAAQA,SAAS;QACf,KAAK,SAAS;UACZ,OAAO,MAAM;QACf,KAAK,QAAQ;UACX,OAAO,MAAM;QACf,KAAK,QAAQ;UACX,OAAO,OAAO;QAChB;UACE,OAAO,EAAE;MACb;IACF;IAEA,MAAMG,qBAAoB,GAAKH,SAAS,IAAK;MAC3C,QAAQA,SAAS;QACf,KAAK,SAAS;UACZ,OAAO,YAAY;QACrB,KAAK,QAAQ;UACX,OAAO,mBAAmB;QAC5B,KAAK,QAAQ;UACX,OAAO,cAAc;QACvB;UACE,OAAO,EAAE;MACb;IACF;IAEA,MAAMI,qBAAoB,GAAKb,MAAM,IAAK;MACxCT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,MAAM,CAAC;MAC9Bb,MAAM,CAAC2B,IAAI,CAAC;QACV9B,IAAI,EAAEF,MAAM,CAACiC,kBAAkB,CAAC/B,IAAI;QACpCM,MAAM,EAAC;UACL0B,EAAE,EAAEhB;QACN;MACF,CAAC;IACH;IAEA,OAAO;MACLN,eAAe;MACfiB,gBAAgB;MAChBC,qBAAqB;MACrBnB,WAAW;MACXJ,QAAQ;MACRM,cAAc;MACdC,gBAAgB;MAChBiB;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}