{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"input-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_two_button_modal = _resolveComponent(\"two-button-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, \"개인 정보\", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"subtitle\"\n  }, \"회원 탈퇴\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"비밀번호\",\n    type: \"password\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: \"job-register-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.onDeleteAccountClick && $setup.onDeleteAccountClick(...args))\n  }, \"탈퇴하기\")])])]), $setup.modalPopupStatue ? (_openBlock(), _createBlock(_component_two_button_modal, {\n    key: 0,\n    onCloseModal: _cache[1] || (_cache[1] = $event => $setup.modalPopupStatue = false),\n    \"router-path\": $options.ROUTES.USER_DELETE_SUCCESS.path,\n    \"modal-message\": \"정말로 탈퇴하시겠습니까?\"\n  }, null, 8 /* PROPS */, [\"router-path\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","placeholder","type","onClick","_cache","args","$setup","onDeleteAccountClick","modalPopupStatue","_createBlock","_component_two_button_modal","key","onCloseModal","$event","$options","ROUTES","USER_DELETE_SUCCESS","path","_createCommentVNode"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/IndividualUserDelete.vue"],"sourcesContent":["<script>\nimport TwoButtonModal from \"@/components/TwoButtonModal.vue\";\nimport {ref} from \"vue\";\nimport {ROUTES} from \"@/router/routes\";\n\nexport default {\n  name: \"IndividualUserDelete\",\n  computed: {\n    ROUTES() {\n      return ROUTES\n    }\n  },\n  components: { TwoButtonModal },\n  setup() {\n    const modalPopupStatue = ref(false);\n\n    const onDeleteAccountClick = () => {\n      // todo 일반회원 탈퇴하기 API 구현 시 아래에 로직 구현하기\n      console.log(\"탈퇴하기\")\n      modalPopupStatue.value = true;\n    }\n\n    return {\n      modalPopupStatue,\n      onDeleteAccountClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <div class=\"body\">\n    <div class=\"header\">개인 정보</div>\n    <div class=\"subtitle\">회원 탈퇴</div>\n    <div class=\"content\">\n      <div class=\"input-section\">\n        <input class=\"input-field\" placeholder=\"비밀번호\" type=\"password\">\n        <div class=\"job-register-button\" @click=\"onDeleteAccountClick\">탈퇴하기</div>\n      </div>\n    </div>\n  </div>\n  <two-button-modal\n      v-if=\"modalPopupStatue\"\n      @close-modal=\"modalPopupStatue = false\"\n      :router-path=\"ROUTES.USER_DELETE_SUCCESS.path\"\n      modal-message=\"정말로 탈퇴하시겠습니까?\"\n  />\n</template>\n\n<style scoped>\n.body {\n  flex: 1;                      /* 가변 영역, 헤더와 바텀 내비게이션을 제외한 나머지 공간 차지 */\n  padding: 20px;                /* 내부 여백 */\n  box-sizing: border-box;       /* 패딩을 포함한 크기 계산 */\n  background-color: #f8f9fa;    /* 배경색 */\n  overflow-y: auto;             /* 내용이 넘칠 경우 스크롤 가능 */\n}\n\n.header {\n  font-size: 24px;              /* 헤더 폰트 크기 */\n  font-weight: bold;            /* 헤더 두껍게 */\n  margin-bottom: 20px;          /* 아래쪽 여백 */\n}\n\n.subtitle {                     /* 소제목 스타일 */\n  font-size: 18px;              /* 글자 크기 */\n  font-weight: bold;            /* 글자 두께 */\n  margin-bottom: 10px;          /* 아래쪽 여백 */\n  color: #333;                  /* 텍스트 색상 */\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 130px;\n  flex: 1;                      /* 가변 영역 */\n  height: 100%;                 /* 전체 높이를 사용하도록 설정 */\n}\n\n.input-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n}\n\n.input-field {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  box-sizing: border-box;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 1px solid #413F42;\n}\n\n.job-register-button {\n  width: 95%;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: #024CAA;\n  color: white;\n  text-align: center;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 8px;\n}\n</style>"],"mappings":";;EA+BOA,KAAK,EAAC;AAAM;;EAGVA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAe;;;uBAnChCC,mBAAA,CAAAC,SAAA,SA+BEC,mBAAA,CASM,OATNC,UASM,G,0BARJD,mBAAA,CAA+B;IAA1BH,KAAK,EAAC;EAAQ,GAAC,OAAK,sB,0BACzBG,mBAAA,CAAiC;IAA5BH,KAAK,EAAC;EAAU,GAAC,OAAK,sBAC3BG,mBAAA,CAKM,OALNE,UAKM,GAJJF,mBAAA,CAGM,OAHNG,UAGM,G,0BAFJH,mBAAA,CAA8D;IAAvDH,KAAK,EAAC,aAAa;IAACO,WAAW,EAAC,MAAM;IAACC,IAAI,EAAC;+BACnDL,mBAAA,CAAyE;IAApEH,KAAK,EAAC,qBAAqB;IAAES,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,oBAAA,IAAAD,MAAA,CAAAC,oBAAA,IAAAF,IAAA,CAAoB;KAAE,MAAI,E,OAK/DC,MAAA,CAAAE,gBAAgB,I,cAD1BC,YAAA,CAKEC,2BAAA;IA9CJC,GAAA;IA2COC,YAAW,EAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAAEP,MAAA,CAAAE,gBAAgB;IAC7B,aAAW,EAAEM,QAAA,CAAAC,MAAM,CAACC,mBAAmB,CAACC,IAAI;IAC7C,eAAa,EAAC;8CA7CpBC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}