{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nimport _imports_0 from '@/assets/images/icons/rightarrows.png';\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"job-posting-wrap\"\n};\nconst _hoisted_3 = {\n  class: \"job-posting-info\"\n};\nconst _hoisted_4 = {\n  class: \"job-posting-list-top\"\n};\nconst _hoisted_5 = {\n  class: \"course-title\"\n};\nconst _hoisted_6 = {\n  class: \"course-subtitle\"\n};\nconst _hoisted_7 = {\n  class: \"course-schedule\"\n};\nconst _hoisted_8 = {\n  class: \"schedule-info\"\n};\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, \"지원 현황\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.jopPostingCount) + \"건\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.jobPostingList, jobPosting => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"job-posting-list\",\n      key: jobPosting\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(jobPosting.entName), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: _normalizeClass(['recruitment-phase', _ctx.recruitmentPhaseClass(jobPosting.postState)])\n    }, _toDisplayString(_ctx.recruitmentPhase(jobPosting.postState)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(jobPosting.postTitle), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString($options.formatDate(new Date(jobPosting.startDate))) + \" ~ \" + _toDisplayString($options.formatDate(new Date(jobPosting.endDate))), 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: _imports_0,\n      class: \"right-arrow-icon\",\n      alt: \"Right Arrow Icon\",\n      onClick: $event => $setup.onMoveDetailPageClick(jobPosting.postId)\n    }, null, 8 /* PROPS */, _hoisted_9)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","jopPostingCount","_Fragment","_renderList","jobPostingList","jobPosting","key","_hoisted_4","_hoisted_5","entName","_normalizeClass","recruitmentPhaseClass","postState","recruitmentPhase","_hoisted_6","postTitle","_hoisted_7","_hoisted_8","$options","formatDate","Date","startDate","endDate","src","alt","onClick","$event","$setup","onMoveDetailPageClick","postId","_hoisted_9"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/JobApplicationStatus.vue"],"sourcesContent":["<script>\nimport {formatDate} from \"@/utils/format\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {onMounted, ref} from \"vue\";\nimport {ROUTES} from \"@/router/routes\";\n\nexport default {\n  name: \"JobApplicationStatus\",\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n\n    const jopApplicationCount = ref(0);\n    const jobApplicationList = ref();\n\n    const fetchJopApplication = () => {\n      // todo 채용지원 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n      ];\n\n      jobApplicationList.value = data;\n      jopApplicationCount.value = jobApplicationList.value.length;\n    }\n\n    onMounted(() => {\n      fetchJopApplication();\n    })\n\n    const onMoveDetailPageClick = (postId) => {\n      console.log(\"postId:\", postId);\n      router.push({\n        name: ROUTES.JOB_POSTING_DETAIL.name,\n        params:{\n          id: postId\n        },\n      })\n    }\n\n    return {\n      onMoveDetailPageClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">지원 현황</div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"jobPosting in jobPostingList\" :key=\"jobPosting\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">{{ jobPosting.entName }}</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass(jobPosting.postState)]\">{{ recruitmentPhase(jobPosting.postState) }}</div>\n        </div>\n        <div class=\"course-subtitle\">{{ jobPosting.postTitle }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(jobPosting.startDate)) }} ~ {{ formatDate(new Date(jobPosting.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(jobPosting.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;                      /* 가변 영역, 헤더와 바텀 내비게이션을 제외한 나머지 공간 차지 */\n  padding: 20px;                /* 내부 여백 */\n  box-sizing: border-box;       /* 패딩을 포함한 크기 계산 */\n  background-color: #f8f9fa;    /* 배경색 */\n  overflow-y: auto;             /* 내용이 넘칠 경우 스크롤 가능 */\n}\n\n.header {\n  font-size: 24px;              /* 헤더 폰트 크기 */\n  font-weight: bold;            /* 헤더 두껍게 */\n  margin-bottom: 20px;          /* 아래쪽 여백 */\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2;\n}\n\n.phase-in-progress {\n  background-color: #FF9800;\n}\n\n.phase-closed {\n  background-color: #686D76;\n}\n</style>"],"mappings":";OAmFeA,UAA2C;;EAZlDC,KAAK,EAAC;AAAM;;EAEXA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAc;;EAGtBA,KAAK,EAAC;AAAiB;;EACvBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAe;mBAlFpC;;uBAuEEC,mBAAA,CAgBO,QAhBPC,UAgBO,G,0BAfLC,mBAAA,CAA+B;IAA1BH,KAAK,EAAC;EAAQ,GAAC,OAAK,sBACzBG,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAA0D,OAA1DE,UAA0D,EAAAC,gBAAA,CAAzBC,IAAA,CAAAC,eAAe,IAAG,GAAC,kB,kBACpDP,mBAAA,CAUMQ,SAAA,QArFZC,WAAA,CA2EyDH,IAAA,CAAAI,cAAc,EAA5BC,UAAU;yBAA/CX,mBAAA,CAUM;MAVDD,KAAK,EAAC,kBAAkB;MAAuCa,GAAG,EAAED;QACvET,mBAAA,CAGM,OAHNW,UAGM,GAFJX,mBAAA,CAAwD,OAAxDY,UAAwD,EAAAT,gBAAA,CAA3BM,UAAU,CAACI,OAAO,kBAC/Cb,mBAAA,CAAmI;MAA7HH,KAAK,EA9ErBiB,eAAA,uBA8E6CV,IAAA,CAAAW,qBAAqB,CAACN,UAAU,CAACO,SAAS;wBAAOZ,IAAA,CAAAa,gBAAgB,CAACR,UAAU,CAACO,SAAS,yB,GAE3HhB,mBAAA,CAA6D,OAA7DkB,UAA6D,EAAAf,gBAAA,CAA7BM,UAAU,CAACU,SAAS,kBACpDnB,mBAAA,CAGM,OAHNoB,UAGM,GAFJpB,mBAAA,CAAkI,OAAlIqB,UAAkI,EAAAlB,gBAAA,CAApGmB,QAAA,CAAAC,UAAU,KAAKC,IAAI,CAACf,UAAU,CAACgB,SAAS,MAAK,KAAG,GAAAtB,gBAAA,CAAGmB,QAAA,CAAAC,UAAU,KAAKC,IAAI,CAACf,UAAU,CAACiB,OAAO,oBACvH1B,mBAAA,CAAmJ;MAA9I2B,GAA2C,EAA3C/B,UAA2C;MAACC,KAAK,EAAC,kBAAkB;MAAC+B,GAAG,EAAC,kBAAkB;MAAEC,OAAK,EAAAC,MAAA,IAAEC,MAAA,CAAAC,qBAAqB,CAACvB,UAAU,CAACwB,MAAM;4BAnF1JC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}