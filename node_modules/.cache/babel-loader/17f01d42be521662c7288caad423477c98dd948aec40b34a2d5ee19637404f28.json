{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from 'vue-router';\nexport default {\n  name: \"TwoButtonModal\",\n  props: {\n    modalMessage: {\n      type: String,\n      required: true\n    },\n    leftButtonText: {\n      type: String,\n      default: '확인' // 기본 버튼 텍스트\n    },\n    rightButtonText: {\n      type: String,\n      default: '취소' // 기본 버튼 텍스트\n    },\n    routerPath: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const router = useRouter(); // useRouter 훅을 사용하여 라우터 인스턴스를 가져옵니다.\n\n    const onLeftModalButtonClick = () => {\n      if (props.routerPath) {\n        router.push(props.routerPath); // 라우터 경로로 이동\n      }\n      emit('close-modal', false);\n    };\n    const onRightModalButtonClick = () => {\n      if (props.routerPath) {\n        router.push(props.routerPath); // 라우터 경로로 이동\n      }\n      emit('close-modal', false);\n    };\n    return {\n      props,\n      onLeftModalButtonClick,\n      onRightModalButtonClick\n    };\n  }\n};","map":{"version":3,"names":["useRouter","name","props","modalMessage","type","String","required","leftButtonText","default","rightButtonText","routerPath","setup","emit","router","onLeftModalButtonClick","push","onRightModalButtonClick"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/components/TwoButtonModal.vue"],"sourcesContent":["<script>\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: \"TwoButtonModal\",\n  props: {\n    modalMessage: {\n      type: String,\n      required: true,\n    },\n    leftButtonText: {\n      type: String,\n      default: '확인', // 기본 버튼 텍스트\n    },\n    rightButtonText: {\n      type: String,\n      default: '취소', // 기본 버튼 텍스트\n    },\n    routerPath: {\n      type: String,\n      required: true,\n    }\n  },\n  setup(props, {emit}) {\n    const router = useRouter(); // useRouter 훅을 사용하여 라우터 인스턴스를 가져옵니다.\n\n    const onLeftModalButtonClick = () => {\n      if (props.routerPath) {\n        router.push(props.routerPath); // 라우터 경로로 이동\n      }\n      emit('close-modal', false);\n    }\n\n    const onRightModalButtonClick = () => {\n      if (props.routerPath) {\n        router.push(props.routerPath); // 라우터 경로로 이동\n      }\n      emit('close-modal', false);\n    }\n\n    return {\n      props,\n      onLeftModalButtonClick,\n      onRightModalButtonClick,\n    };\n  }\n};\n</script>\n\n<template>\n  <div class=\"overlay\">\n    <div class=\"modal\">\n      <div class=\"modal-content\">\n        <p class=\"modal-message\">{{ props.modalMessage }}</p>\n        <div class=\"button-wrap\">\n          <button class=\"left-modal-button\" @click=\"onLeftModalButtonClick\">{{ props.leftButtonText }}</button>\n          <button class=\"right-modal-button\" @click=\"onRightModalButtonClick\">{{ props.rightButtonText }}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.overlay {\n  position: fixed; /* 고정 위치 */\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* 반투명 배경 */\n  display: flex;\n  align-items: center; /* 세로 중앙 정렬 */\n  justify-content: center; /* 가로 중앙 정렬 */\n  z-index: 1000; /* 다른 요소들 위에 표시 */\n}\n\n.modal {\n  background-color: white; /* 모달 배경색 */\n  border-radius: 8px; /* 모서리 둥글게 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 그림자 효과 */\n  padding: 20px; /* 내부 여백 */\n  width: 300px; /* 모달 너비 */\n  height: 150px;\n  display: flex; /* 플렉스 박스 사용 */\n  flex-direction: column; /* 세로 방향 정렬 */\n  justify-content: center; /* 세로 중앙 정렬 */\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column; /* 세로 방향 정렬 */\n  align-items: center; /* 가로 중앙 정렬 */\n}\n\n.modal-message {\n  margin-bottom: 45px; /* 메시지와 버튼 사이 여백 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n}\n\n.left-modal-button {\n  padding: 10px 20px; /* 버튼 내부 여백 */\n  border: none; /* 기본 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  background-color: #024CAA; /* 버튼 배경색 */\n  color: white; /* 버튼 텍스트 색상 */\n  cursor: pointer; /* 포인터 커서로 변경 */\n  transition: background-color 0.3s; /* 배경색 변화 애니메이션 */\n  width: 150px;\n}\n\n.left-modal-button:hover {\n  background-color: #003a7a; /* 호버 시 배경색 변화 */\n}\n\n.right-modal-button {\n  padding: 10px 20px; /* 버튼 내부 여백 */\n  border: none; /* 기본 테두리 제거 */\n  border-radius: 5px; /* 모서리 둥글게 */\n  background-color: #024CAA; /* 버튼 배경색 */\n  color: white; /* 버튼 텍스트 색상 */\n  cursor: pointer; /* 포인터 커서로 변경 */\n  transition: background-color 0.3s; /* 배경색 변화 애니메이션 */\n  width: 150px;\n}\n\n.right-modal-button:hover {\n  background-color: #003a7a; /* 호버 시 배경색 변화 */\n}\n</style>\n"],"mappings":";AACA,SAASA,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,YAAY,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,cAAc,EAAE;MACdH,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;IACDC,eAAe,EAAE;MACfL,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;IACDE,UAAU,EAAE;MACVN,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDK,KAAKA,CAACT,KAAK,EAAE;IAACU;EAAI,CAAC,EAAE;IACnB,MAAMC,MAAK,GAAIb,SAAS,CAAC,CAAC,EAAE;;IAE5B,MAAMc,sBAAqB,GAAIA,CAAA,KAAM;MACnC,IAAIZ,KAAK,CAACQ,UAAU,EAAE;QACpBG,MAAM,CAACE,IAAI,CAACb,KAAK,CAACQ,UAAU,CAAC,EAAE;MACjC;MACAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC;IAC5B;IAEA,MAAMI,uBAAsB,GAAIA,CAAA,KAAM;MACpC,IAAId,KAAK,CAACQ,UAAU,EAAE;QACpBG,MAAM,CAACE,IAAI,CAACb,KAAK,CAACQ,UAAU,CAAC,EAAE;MACjC;MACAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC;IAC5B;IAEA,OAAO;MACLV,KAAK;MACLY,sBAAsB;MACtBE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}