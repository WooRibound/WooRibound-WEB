{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"input-section\"\n};\nconst _hoisted_4 = {\n  class: \"input-label\"\n};\nconst _hoisted_5 = {\n  class: \"input-label\",\n  style: {\n    \"margin-left\": \"30px\",\n    \"font-size\": \"10pt\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"input-label\"\n};\nconst _hoisted_7 = {\n  class: \"input-label\"\n};\nconst _hoisted_8 = {\n  class: \"input-field\",\n  \"aria-label\": \"산업\"\n};\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  class: \"input-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_modal_popup = _resolveComponent(\"modal-popup\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"main\", _hoisted_1, [_cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, \"기업 정보\", -1 /* HOISTED */)), _cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"subtitle\"\n  }, \"기업정보 수정\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 아이디 입력 \"), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"아이디\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.idInput = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.idInput]])]), _createCommentVNode(\" 중복 확인 메시지 출력 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n    class: _normalizeClass({\n      'error-message': $setup.duplicateIdMessage.includes('중복입니다'),\n      'success-message': $setup.duplicateIdMessage.includes('사용 가능한')\n    })\n  }, _toDisplayString($setup.duplicateIdMessage), 3 /* TEXT, CLASS */)]), _createCommentVNode(\" 대표자명 입력 \"), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"input-label\"\n  }, [_createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"대표자명\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 기업명 입력 \"), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"input-label\"\n  }, [_createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"기업명\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 사업자번호 입력 \"), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"input-label\"\n  }, [_createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"사업자 번호\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 주소 입력 \"), _createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"주소\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"check-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.onAddressSearchClick && $setup.onAddressSearchClick(...args))\n  }, \"검색\")]), _createCommentVNode(\" 상세주소 입력 \"), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"input-label\"\n  }, [_createElementVNode(\"span\", {\n    class: \"required\"\n  }), _createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"상세 주소\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 성별 선택 \"), _cache[14] || (_cache[14] = _createStaticVNode(\"<div class=\\\"input-label\\\" data-v-edd6171c><select class=\\\"input-field\\\" aria-label=\\\"기업 규모\\\" data-v-edd6171c><option value=\\\"\\\" disabled selected data-v-edd6171c>기업 규모</option><option value=\\\"large\\\" data-v-edd6171c>대기업</option><option value=\\\"medium\\\" data-v-edd6171c>중견기업</option><option value=\\\"small\\\" data-v-edd6171c>중소기업</option><option value=\\\"startup\\\" data-v-edd6171c>스타트업</option></select></div>\", 1)), _createCommentVNode(\" 산업 선택 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"select\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"산업\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.industries, industry => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: industry,\n      value: industry\n    }, _toDisplayString(industry), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 매출액 입력 \"), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input-field\",\n    placeholder: \"매출액\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.formattedRevenue = $event),\n    onInput: _cache[3] || (_cache[3] = (...args) => $setup.formatRevenue && $setup.formatRevenue(...args)),\n    onKeydown: _cache[4] || (_cache[4] = (...args) => $setup.formatRevenue && $setup.formatRevenue(...args)),\n    onKeyup: _cache[5] || (_cache[5] = (...args) => $setup.formatRevenue && $setup.formatRevenue(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.formattedRevenue]])]), _createElementVNode(\"div\", {\n    class: \"find-password-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.onUpdateProfilerClick && $setup.onUpdateProfilerClick(...args))\n  }, \"수정하기\")])])]), $setup.modalPopupStatue ? (_openBlock(), _createBlock(_component_modal_popup, {\n    key: 0,\n    onCloseModal: _cache[7] || (_cache[7] = $event => $setup.modalPopupStatue = false),\n    \"modal-message\": '수정이 완료되었습니다.'\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","placeholder","_cache","$event","$setup","idInput","readonly","_hoisted_5","_normalizeClass","duplicateIdMessage","includes","_hoisted_6","onClick","args","onAddressSearchClick","_createStaticVNode","_hoisted_7","_hoisted_8","value","disabled","selected","_renderList","industries","industry","key","_hoisted_9","_hoisted_10","type","formattedRevenue","onInput","formatRevenue","onKeydown","onKeyup","onUpdateProfilerClick","modalPopupStatue","_createBlock","_component_modal_popup","onCloseModal"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/CorporateUser/CorporateUserProfile.vue"],"sourcesContent":["<script>\nimport { ref, computed } from 'vue';\nimport ModalPopup from \"@/components/SingleButtonModal.vue\";\nimport {ROUTES} from \"@/router/routes\";\nexport default {\n  name: \"CorporateUserProfile\",\n  computed: {\n    ROUTES() {\n      return ROUTES\n    }\n  },\n  components: {ModalPopup},\n  setup() {\n    const modalPopupStatue = ref(false);\n    const idInput = ref(\"\"); // 아이디 입력 값\n    const duplicateIdMessage = ref(\"\"); // 중복 확인 메시지\n\n    const industries = ref([\n      \"제조업\", \"정보통신\", \"금융업\", \"서비스업\", \"건설업\",\n      \"유통업\", \"에너지 및 환경\", \"농업 및 어업\", \"제약 및 생명과학\"\n    ]);\n\n    const revenue = ref(\"\"); // 원본 숫자 값\n\n    const formattedRevenue = computed({\n      get() {\n        return revenue.value ? new Intl.NumberFormat('ko-KR').format(revenue.value) : \"\";\n      },\n      set(value) {\n        // 콤마를 제거한 후 숫자로 변환하여 원본 값에 저장\n        revenue.value = value.replace(/,/g, '');\n      }\n    });\n\n    const formatRevenue = (event) => {\n      const input = event.target.value;\n      // 숫자와 콤마만 허용\n      const sanitizedInput = input.replace(/[^0-9,]/g, ''); // 숫자와 콤마를 제외한 모든 문자 제거\n      formattedRevenue.value = sanitizedInput; // computed setter가 호출되어 포맷 적용\n    };\n\n    const onAddressSearchClick = () => {\n      // todo 다음 주소 api로 로직 주소 찾기 로직 구현하기\n      console.log(\"주소찾기\");\n    }\n    const onUpdateProfilerClick = () => {\n      modalPopupStatue.value = true;\n    }\n\n    // 중복 확인 함수\n    const onCheckDuplicateIdClick = () => {\n      // todo [아이디 중복 확인 API] 구현 시 아래 로직 구현하기\n      const existingIds = [\"user1\", \"user2\"]; // 하드코딩된 기존 아이디 예시\n      if (!idInput.value) {\n        alert(\"아이디를 입력해주세요.\");\n        return;\n      }\n\n      if (existingIds.includes(idInput.value)) {\n        duplicateIdMessage.value = \"* 해당 아이디는 중복입니다.\";\n      } else {\n        duplicateIdMessage.value = \"* 사용 가능한 아이디입니다.\";\n      }\n    }\n\n    return {\n      modalPopupStatue,\n      industries,\n      formattedRevenue,\n      idInput,\n      duplicateIdMessage,\n      formatRevenue,\n      onAddressSearchClick,\n      onUpdateProfilerClick,\n      onCheckDuplicateIdClick,\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">기업 정보</div>\n    <div class=\"subtitle\">기업정보 수정</div>\n    <div class=\"content\">\n      <div class=\"input-section\">\n        <!-- 아이디 입력 -->\n        <div class=\"input-label\">\n          <input\n              class=\"input-field\"\n              placeholder=\"아이디\"\n              v-model=\"idInput\"\n              readonly\n          />\n        </div>\n        <!-- 중복 확인 메시지 출력 -->\n        <div class=\"input-label\" style=\"margin-left: 30px; font-size: 10pt\">\n          <span :class=\"{ 'error-message': duplicateIdMessage.includes('중복입니다'), 'success-message': duplicateIdMessage.includes('사용 가능한') }\">\n            {{ duplicateIdMessage }}\n          </span>\n        </div>\n        <!-- 대표자명 입력 -->\n        <div class=\"input-label\">\n          <input class=\"input-field\" placeholder=\"대표자명\">\n        </div>\n        <!-- 기업명 입력 -->\n        <div class=\"input-label\">\n          <input class=\"input-field\" placeholder=\"기업명\">\n        </div>\n        <!-- 사업자번호 입력 -->\n        <div class=\"input-label\">\n          <input class=\"input-field\" placeholder=\"사업자 번호\">\n        </div>\n        <!-- 주소 입력 -->\n        <div class=\"input-label\">\n          <input class=\"input-field\" placeholder=\"주소\" />\n          <button class=\"check-button\" @click=\"onAddressSearchClick\">검색</button>\n        </div>\n        <!-- 상세주소 입력 -->\n        <div class=\"input-label\">\n          <span class=\"required\"></span>\n          <input class=\"input-field\" placeholder=\"상세 주소\">\n        </div>\n        <!-- 성별 선택 -->\n        <div class=\"input-label\">\n          <select class=\"input-field\" aria-label=\"기업 규모\">\n            <option value=\"\" disabled selected>기업 규모</option>\n            <option value=\"large\">대기업</option>\n            <option value=\"medium\">중견기업</option>\n            <option value=\"small\">중소기업</option>\n            <option value=\"startup\">스타트업</option>\n          </select>\n        </div>\n        <!-- 산업 선택 -->\n        <div class=\"input-label\">\n          <select class=\"input-field\" aria-label=\"산업\">\n            <option value=\"\" disabled selected>산업</option>\n            <option v-for=\"industry in industries\" :key=\"industry\" :value=\"industry\">{{ industry }}</option>\n          </select>\n        </div>\n        <!-- 매출액 입력 -->\n        <div class=\"input-label\">\n          <input\n              class=\"input-field\"\n              placeholder=\"매출액\"\n              type=\"text\"\n              v-model=\"formattedRevenue\"\n              @input=\"formatRevenue\"\n              @keydown=\"formatRevenue\"\n              @keyup=\"formatRevenue\"\n          />\n        </div>\n        <div class=\"find-password-button\" @click=\"onUpdateProfilerClick\">수정하기</div>\n      </div>\n    </div>\n  </main>\n  <modal-popup\n      v-if=\"modalPopupStatue\"\n      @close-modal=\"modalPopupStatue = false\"\n      :modal-message=\"'수정이 완료되었습니다.'\"\n  />\n</template>\n\n<style scoped>\n.body {\n  flex: 1;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f8f9fa;\n  overflow-y: auto;\n}\n\n.header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.subtitle {                     /* 소제목 스타일 */\n  font-size: 18px;              /* 글자 크기 */\n  font-weight: bold;            /* 글자 두께 */\n  margin-bottom: 10px;          /* 아래쪽 여백 */\n  color: #333;                  /* 텍스트 색상 */\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n}\n\n.input-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  flex: 1;\n}\n\n.input-label {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.required {\n  color: #F60F0F;\n  margin-right: 5px;\n}\n\n.input-field {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 10px 10px 0; /* 오른쪽 여백 추가 */\n  box-sizing: border-box;\n  font-size: 16px;\n  border-radius: 12px;\n  border: 1px solid #e1e1e1;\n  color: #413F42;\n}\n\n.check-button {\n  padding: 0 15px; /* 상하 패딩을 0으로 설정 */\n  background-color: #024CAA; /* 버튼 배경색 */\n  color: white; /* 글자색 */\n  border: none; /* 테두리 없앰 */\n  border-radius: 12px; /* 버튼 모서리 둥글게 */\n  cursor: pointer; /* 커서 포인터로 변경 */\n  margin-left: 10px; /* 아이디 입력 필드와 버튼 간격 */\n  font-size: 14px; /* 글자 크기 */\n  height: 40px; /* 버튼 높이를 아이디 입력 필드와 동일하게 설정 */\n  white-space: nowrap; /* 텍스트가 줄 바꿈되지 않도록 설정 */\n  margin-right: 10px;\n}\n\n.check-button:hover {\n  background-color: #023c7a; /* 버튼 호버 시 배경색 변경 */\n}\n\n.find-password-button {\n  width: 90%;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: #024CAA;\n  color: white;\n  text-align: center;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 8px;\n}\n\n.error-message {\n  color: #C62E2E;\n}\n\n.success-message {\n  color: #133E87;\n}\n\n.input-field[readonly] {\n  background-color: #e0e0e0;\n  color: #666;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}