{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"applicant-info\"\n};\nconst _hoisted_3 = {\n  class: \"applicant-table\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"status-container\"\n};\nconst _hoisted_5 = {\n  class: \"status-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"status-accepted-gray\"\n};\nconst _hoisted_7 = {\n  class: \"status-container\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"status-accepted-gray\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, \"직원 관리\", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"subtitle\"\n  }, \"직원 목록 조회 / 평가하기\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"고용일자\"), _createElementVNode(\"th\", null, \"이름\"), _createElementVNode(\"th\", null, \"직무\"), _createElementVNode(\"th\", null, \"평가하기\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.employmentList, employment => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employment\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employment.hireDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employment.userName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employment.jobName), 1 /* TEXT */), _createElementVNode(\"td\", null, [employment.recommend === 'INPROGRESS' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n      class: \"status-accepted\",\n      onClick: _cache[0] || (_cache[0] = $event => $setup.onRecommendClick('recommend'))\n    }, \"추천\"), _createElementVNode(\"div\", {\n      class: \"status-rejected\",\n      onClick: _cache[1] || (_cache[1] = $event => $setup.onRecommendClick('notRecommend'))\n    }, \"비추천\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_5, [employment.recommend === 'COMPLETED' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"평가종료\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [employment.recommend === 'NOTSTARTED' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"평가전\")) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","employmentList","employment","_toDisplayString","hireDate","userName","jobName","recommend","_hoisted_4","onClick","_cache","$event","onRecommendClick","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/CorporateUser/EmployeeManagement.vue"],"sourcesContent":["<script>\nimport {useRoute} from \"vue-router\";\nimport {onMounted, ref} from \"vue\";\nexport default {\n  name: \"EmployeeManagement\",\n  setup() {\n    const route = useRoute();\n\n    const id = route.params.id\n    console.log(id);\n    const employmentList = ref();\n\n    const onRecommendClick = (status) => {\n      // todo 고용인 추천,비추천 API 구현시 아래 로직 구현하기\n      if (status === \"recommend\") {\n        console.log(\"추천\");\n      } else {\n        console.log(\"비추천\");\n      }\n    }\n\n    const fetchEmployment = () => {\n      const data = [\n        {\n          hireDate: \"2024-01-01\",\n          userName: \"이승준\",\n          jobName: \"IT 엔지니어\",\n          recommend: \"COMPLETED\", // COMPLETED(평가종료), NOTSTARTED(평가전), INPROGRESS(평가해야함)\n        },\n        {\n          hireDate: \"2024-01-01\",\n          userName: \"조성현\",\n          jobName: \"건설\",\n          recommend: \"NOTSTARTED\", // COMPLETED(평가종료), NOTSTARTED(평가전), INPROGRESS(평가해야함)\n        },\n        {\n          hireDate: \"2024-01-01\",\n          userName: \"이주원\",\n          jobName: \"서비스\",\n          recommend: \"INPROGRESS\", // COMPLETED(평가종료), NOTSTARTED(평가전), INPROGRESS(평가해야함)\n        },\n      ]\n\n      employmentList.value = data;\n    }\n\n    onMounted(() => {\n      fetchEmployment();\n    })\n\n    return {\n      onRecommendClick,\n      employmentList\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">직원 관리</div>\n    <div class=\"subtitle\">직원 목록 조회 / 평가하기</div>\n    <div class=\"applicant-info\">\n      <table class=\"applicant-table\">\n        <thead>\n        <tr>\n          <th>고용일자</th>\n          <th>이름</th>\n          <th>직무</th>\n          <th>평가하기</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"employment in employmentList\" :key=\"employment\">\n          <td>{{ employment.hireDate }}</td>\n          <td>{{ employment.userName }}</td>\n          <td>{{ employment.jobName }}</td>\n          <td>\n            <div class=\"status-container\" v-if=\"employment.recommend === 'INPROGRESS'\">\n              <div class=\"status-accepted\" @click=\"onRecommendClick('recommend')\">추천</div>\n              <div class=\"status-rejected\" @click=\"onRecommendClick('notRecommend')\">비추천</div>\n            </div>\n            <div class=\"status-container\">\n              <div class=\"status-accepted-gray\" v-if=\"employment.recommend === 'COMPLETED'\">평가종료</div>\n            </div>\n            <div class=\"status-container\">\n              <div class=\"status-accepted-gray\" v-if=\"employment.recommend === 'NOTSTARTED'\">평가전</div>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;                      /* 가변 영역, 헤더와 바텀 내비게이션을 제외한 나머지 공간 차지 */\n  padding: 20px;                /* 내부 여백 */\n  box-sizing: border-box;       /* 패딩을 포함한 크기 계산 */\n  background-color: #f8f9fa;    /* 배경색 */\n  overflow-y: auto;             /* 내용이 넘칠 경우 스크롤 가능 */\n}\n\n.header {\n  font-size: 24px;              /* 헤더 폰트 크기 */\n  font-weight: bold;            /* 헤더 두껍게 */\n  margin-bottom: 20px;          /* 아래쪽 여백 */\n}\n\n.subtitle {                     /* 소제목 스타일 */\n  font-size: 18px;              /* 글자 크기 */\n  font-weight: bold;            /* 글자 두께 */\n  margin-bottom: 10px;          /* 아래쪽 여백 */\n  color: #333;                  /* 텍스트 색상 */\n}\n\n.job-application-info > div {\n  margin: 5px 0;                /* 위아래 간격 설정 */\n}\n\n.applicant-table {\n  width: 100%; /* 테이블을 가로로 꽉 차게 설정 */\n  border-collapse: collapse; /* 테이블 경계선 겹침 방지 */\n  margin-top: 20px; /* 위쪽 여백 */\n}\n\n.applicant-table th {\n  border-top: 1px solid #333; /* 제목 행 상단 선 */\n  border-bottom: 1px solid #333; /* 제목 행 하단 선 */\n  padding: 10px; /* 내부 여백 */\n  text-align: center; /* 중앙 정렬 */\n  background-color: #f1f1f1; /* 배경색 */\n  white-space: nowrap; /* 텍스트가 한 줄로 나오도록 설정 */\n}\n\n.applicant-table td {\n  padding: 10px; /* 내부 여백 */\n  text-align: center;\n  font-size: 9pt;\n}\n\n.resume-link:hover {\n  text-decoration: underline; /* 호버 시 밑줄 */\n}\n.status-container {\n  display: flex; /* Flexbox 사용 */\n  gap: 5px;     /* 요소 간의 간격 */\n  justify-content: center; /* 가운데 정렬 */\n}\n\n.status-accepted {\n  display: inline-block; /* 블록 레벨 요소로 변환 */\n  padding: 6px 12px; /* 내부 여백 */\n  background-color: #5B99C2; /* 배경색 */\n  color: white; /* 글자 색상 */\n  border-radius: 5px; /* 둥근 모서리 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n  white-space: nowrap; /* 텍스트가 한 줄로 나오도록 설정 */\n  font-size: 8pt;\n}\n\n.status-accepted-gray {\n  display: inline-block; /* 블록 레벨 요소로 변환 */\n  padding: 6px 12px; /* 내부 여백 */\n  background-color: #5B99C2; /* 배경색 */\n  color: white; /* 글자 색상 */\n  border-radius: 5px; /* 둥근 모서리 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n  white-space: nowrap; /* 텍스트가 한 줄로 나오도록 설정 */\n  font-size: 8pt;\n}\n\n.status-rejected {\n  display: inline-block; /* 블록 레벨 요소로 변환 */\n  padding: 6px 12px; /* 내부 여백 */\n  background-color: #7AB2D3; /* 배경색 */\n  color: white; /* 글자 색상 */\n  border-radius: 5px; /* 둥근 모서리 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n  white-space: nowrap; /* 텍스트가 한 줄로 나오도록 설정 */\n  font-size: 8pt;\n}\n</style>"],"mappings":";;EA2DQA,KAAK,EAAC;AAAM;;EAGXA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAiB;;EA/DpCC,GAAA;EA8EiBD,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAkB;;EAlFzCC,GAAA;EAmFmBD,KAAK,EAAC;;;EAERA,KAAK,EAAC;AAAkB;;EArFzCC,GAAA;EAsFmBD,KAAK,EAAC;;;uBA3BvBE,mBAAA,CAkCO,QAlCPC,UAkCO,G,0BAjCLC,mBAAA,CAA+B;IAA1BJ,KAAK,EAAC;EAAQ,GAAC,OAAK,sB,0BACzBI,mBAAA,CAA2C;IAAtCJ,KAAK,EAAC;EAAU,GAAC,iBAAe,sBACrCI,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJD,mBAAA,CA4BQ,SA5BRE,UA4BQ,G,0BA3BNF,mBAAA,CAOQ,gBANRA,mBAAA,CAKK,aAJHA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAa,YAAT,MAAI,E,wBAGVA,mBAAA,CAkBQ,iB,kBAjBRF,mBAAA,CAgBKK,SAAA,QAzFbC,WAAA,CAyEiCC,MAAA,CAAAC,cAAc,EAA5BC,UAAU;yBAArBT,mBAAA,CAgBK;MAhBqCD,GAAG,EAAEU;IAAU,IACvDP,mBAAA,CAAkC,YAAAQ,gBAAA,CAA3BD,UAAU,CAACE,QAAQ,kBAC1BT,mBAAA,CAAkC,YAAAQ,gBAAA,CAA3BD,UAAU,CAACG,QAAQ,kBAC1BV,mBAAA,CAAiC,YAAAQ,gBAAA,CAA1BD,UAAU,CAACI,OAAO,kBACzBX,mBAAA,CAWK,aAViCO,UAAU,CAACK,SAAS,qB,cAAxDd,mBAAA,CAGM,OAHNe,UAGM,GAFJb,mBAAA,CAA4E;MAAvEJ,KAAK,EAAC,iBAAiB;MAAEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEX,MAAA,CAAAY,gBAAgB;OAAe,IAAE,GACtEjB,mBAAA,CAAgF;MAA3EJ,KAAK,EAAC,iBAAiB;MAAEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEX,MAAA,CAAAY,gBAAgB;OAAkB,KAAG,E,KAhFxFC,mBAAA,gBAkFYlB,mBAAA,CAEM,OAFNmB,UAEM,GADoCZ,UAAU,CAACK,SAAS,oB,cAA5Dd,mBAAA,CAAwF,OAAxFsB,UAAwF,EAAV,MAAI,KAnFhGF,mBAAA,e,GAqFYlB,mBAAA,CAEM,OAFNqB,UAEM,GADoCd,UAAU,CAACK,SAAS,qB,cAA5Dd,mBAAA,CAAwF,OAAxFwB,UAAwF,EAAT,KAAG,KAtFhGJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}