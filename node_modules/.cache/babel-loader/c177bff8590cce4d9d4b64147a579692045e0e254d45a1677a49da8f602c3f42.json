{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed } from \"vue\";\nimport { useUserStore } from \"@/stores/userStore\";\nimport { USER_TYPES } from \"@/constants/userTypes\";\nimport { useRouter } from \"vue-router\";\nimport { ROUTES } from \"@/router/routes\";\nexport default {\n  name: \"FullScreenMenu\",\n  computed: {\n    ROUTES() {\n      return ROUTES;\n    }\n  },\n  props: {\n    fullScreenMenuState: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const userStore = useUserStore();\n    const router = useRouter();\n    const isVisible = computed(() => props.fullScreenMenuState);\n    const loginText = computed(() => userStore.isLoggedIn ? \"로그아웃\" : \"로그인\");\n    const onCloseFullScreenMenuClick = () => {\n      emit('close-menu');\n    };\n    const onClickMoveLogin = () => {\n      if (!userStore.isLoggedIn) {\n        onCloseFullScreenMenuClick();\n        router.push(\"/login\");\n      } else {\n        // todo 로그아웃 로직 구현\n        console.log(\"로그아웃\");\n      }\n    };\n    return {\n      isVisible,\n      loginText,\n      onCloseFullScreenMenuClick,\n      onClickMoveLogin,\n      userStore,\n      USER_TYPES\n    };\n  }\n};","map":{"version":3,"names":["computed","useUserStore","USER_TYPES","useRouter","ROUTES","name","props","fullScreenMenuState","type","Boolean","required","setup","emit","userStore","router","isVisible","loginText","isLoggedIn","onCloseFullScreenMenuClick","onClickMoveLogin","push","console","log"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/Common/FullScreenMenu.vue"],"sourcesContent":["<script>\nimport {computed} from \"vue\";\nimport { useUserStore } from \"@/stores/userStore\";\nimport { USER_TYPES } from \"@/constants/userTypes\";\nimport { useRouter } from \"vue-router\";\nimport {ROUTES} from \"@/router/routes\";\n\nexport default {\n  name: \"FullScreenMenu\",\n  computed: {\n    ROUTES() {\n      return ROUTES\n    }\n  },\n  props: {\n    fullScreenMenuState: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup(props, { emit }) {\n    const userStore = useUserStore();\n    const router = useRouter();\n\n    const isVisible = computed(() => props.fullScreenMenuState);\n    const loginText = computed(() => (userStore.isLoggedIn ? \"로그아웃\" : \"로그인\"));\n\n    const onCloseFullScreenMenuClick = () => {\n      emit('close-menu');\n    }\n\n    const onClickMoveLogin = () => {\n      if (!userStore.isLoggedIn) {\n        onCloseFullScreenMenuClick();\n        router.push(\"/login\");\n      } else {\n        // todo 로그아웃 로직 구현\n        console.log(\"로그아웃\");\n      }\n    }\n\n    return {\n      isVisible,\n      loginText,\n      onCloseFullScreenMenuClick,\n      onClickMoveLogin,\n      userStore,\n      USER_TYPES,\n    };\n  }\n}\n</script>\n\n<template>\n  <div v-if=\"isVisible\">\n    <header class=\"header\">\n      <img src=\"../../assets/images/icons/home.png\" class=\"home-image\">\n      <img src=\"../../assets/images/icons/close.png\" class=\"close-icon\" @click=\"onCloseFullScreenMenuClick\">\n    </header>\n    <div class=\"top-bar\">\n      <div class=\"login-text\" @click=\"onClickMoveLogin\">{{ loginText }}</div>\n      <img src=\"../../assets/images/logo/wooribound_logo.png\" class=\"logo-image\">\n    </div>\n    <div class=\"navigation-menu\" v-if=\"userStore.userType === USER_TYPES.INDIVIDUAL_USER\">\n      <div class=\"menu-content\">\n        <router-link :to=\"ROUTES.JOB_MENU.path\">\n          <div class=\"menu_title\" @click=\"onCloseFullScreenMenuClick\">채용 공고</div>\n        </router-link>\n      </div>\n      <div class=\"menu-content\">\n        <div class=\"menu_title\">내 정보 보기</div>\n        <div class=\"menu-items\" @click=\"onCloseFullScreenMenuClick\">\n          <router-link :to=\"ROUTES.JOB_APPLICATION_STATUS.path\">\n            <div class=\"menu-item\">지원 현황</div>\n          </router-link>\n          <router-link :to=\"ROUTES.RESUME_PAGE.path\">\n            <div class=\"menu-item\">이력서</div>\n          </router-link>\n          <router-link :to=\"ROUTES.INDIVIDUAL_USER_PROFILE.path\">\n            <div class=\"menu-item\">개인 정보</div>\n          </router-link>\n          <router-link :to=\"ROUTES.WOORIBOUND_ELEVATION_INFO.path\">\n            <div class=\"menu-item\">우바 고도</div>\n          </router-link>\n        </div>\n      </div>\n      <div class=\"menu-content\">\n        <div class=\"menu_title\">지혜 마당</div>\n        <div class=\"menu-items\" @click=\"onCloseFullScreenMenuClick\">\n          <router-link :to=\"ROUTES.JOB_APPLICATION_STATUS.path\">\n            <div class=\"menu-item\">지혜 나눔</div>\n          </router-link>\n          <router-link :to=\"ROUTES.RESUME_PAGE.path\">\n            <div class=\"menu-item\">지혜 탐색</div>\n          </router-link>\n        </div>\n      </div>\n    </div>\n    <div class=\"navigation-menu\" v-if=\"userStore.userType === USER_TYPES.CORPORATE_MEMBER\">\n      <div class=\"menu-content\">\n        <div class=\"menu_title\">내 정보 보기</div>\n        <div class=\"menu-items\" @click=\"onCloseFullScreenMenuClick\">\n          <router-link :to=\"ROUTES.CORPORATE_USER_ACCOUNT_MENU.path\">\n            <div class=\"menu-item\">기업 정보</div>\n          </router-link>\n        </div>\n      </div>\n      <div class=\"menu-content\">\n        <router-link :to=\"ROUTES.JOB_POSTING_MANAGEMENT.path\">\n          <div class=\"menu_title\" @click=\"onCloseFullScreenMenuClick\">공고 관리</div>\n        </router-link>\n      </div>\n      <div class=\"menu-content\">\n        <router-link :to=\"ROUTES.EMPLOYEE_MANAGEMENT.path\">\n          <div class=\"menu_title\" @click=\"onCloseFullScreenMenuClick\">직원 관리</div>\n        </router-link>\n      </div>\n    </div>\n    <div class=\"navigation-menu\" v-if=\"userStore.userType === USER_TYPES.SERVICE_ADMIN\">\n      <div class=\"menu-content\">\n        <div class=\"menu_title\" @click=\"onCloseFullScreenMenuClick\">개인 회원 관리</div>\n      </div>\n      <div class=\"menu-content\">\n        <div class=\"menu_title\">기업 회원 관리</div>\n        <div class=\"menu-items\" @click=\"onCloseFullScreenMenuClick\">\n          <div class=\"menu-item\">기업 가입</div>\n          <div class=\"menu-item\">기업 탈퇴</div>\n          <div class=\"menu-item\">기업 회원 조회</div>\n        </div>\n      </div>\n      <div class=\"menu-content\">\n        <div class=\"menu_title\" @click=\"onCloseFullScreenMenuClick\">사용자 로그 분석</div>\n      </div>\n    </div>\n    <div class=\"navigation-menu\" v-if=\"userStore.userType === USER_TYPES.INFRA_ADMIN\">\n      <div class=\"menu-content\">\n        <div class=\"menu_title\" @click=\"onCloseFullScreenMenuClick\">로그 대시보드 관리</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.header {\n  display: flex;\n  justify-content: space-between; /* 양 끝에 배치 */\n  align-items: center;            /* 수직 가운데 정렬 */\n  background-color: #ffffff;      /* 배경 흰색 */\n  padding: 0 10px;                /* 좌우 10px 패딩 */\n  height: 60px;                   /* 일반적인 헤더 높이 */\n  //box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.home-image {\n  width: 40px;\n  cursor: pointer;\n}\n\n.close-icon {\n  width: 30px;                    /* 버튼 크기 설정 */\n  cursor: pointer;\n}\n\n.top-bar {\n  display: flex;\n  flex-direction: column;         /* 세로 방향 정렬 */\n  align-items: flex-start;        /* 수평 시작 정렬 */\n  margin: 30px 0;                /* 상하 여백 */\n}\n\n.login-text {\n  background-color: #ffffff;      /* 배경 흰색 */\n  border: 1px solid #413F42;      /* 테두리 색상 */\n  border-radius: 5px;            /* 둥근 꼭지점 */\n  padding: 10px 110px;            /* 내부 여백 */\n  font-size: 18px;                /* 글자 크기 설정 (조정 가능) */\n  color: #413F42;                 /* 글자 색상 */\n  margin-bottom: 50px;            /* 로고와의 간격 */\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 10pt;\n  font-weight: bold;\n}\n\n.logo-image {\n  width: 120px;                   /* 로고 이미지 크기 설정 */\n  margin-left: 10px;              /* 화면 끝에서 10px 간격 */\n}\n\n.menu-content {\n  background-color: #fff;\n  padding: 20px;\n  width: 100%; /* 화면 사이즈에 따라 90%의 너비 사용 */\n  height: 50%; /* 높이를 화면의 반으로 설정 */\n  margin-bottom: 0; /* 아래쪽 여백 제거 */\n  border-top: 1px solid rgba(65, 63, 66, 0.5); /* 상단 선 색상 연하게 설정 */\n  position: relative; /* 자식 요소의 위치를 상대적으로 설정 */\n}\n\n.menu-content:last-child {\n  border-bottom: none; /* 마지막 요소의 하단 선 제거 */\n}\n\n.menu_title {\n  font-weight: bold; /* 굵은 글씨체 */\n  font-size: 24px; /* 폰트 크기 설정 (조정 가능) */\n}\n\n.menu-items {\n  margin-top: 15px; /* 메뉴 제목과 메뉴 항목 사이의 여백 */\n  font-size: 19px;\n}\n\n.menu-item {\n  padding: 10px 0; /* 항목의 상하 여백 */\n  cursor: pointer; /* 마우스 포인터가 아이템에 올 때 손가락 모양으로 변경 */\n}\n\n.menu-item:last-child {\n  border-bottom: none; /* 마지막 항목의 구분선 제거 */\n}\n</style>"],"mappings":";AACA,SAAQA,QAAQ,QAAO,KAAK;AAC5B,SAASC,YAAW,QAAS,oBAAoB;AACjD,SAASC,UAAS,QAAS,uBAAuB;AAClD,SAASC,SAAQ,QAAS,YAAY;AACtC,SAAQC,MAAM,QAAO,iBAAiB;AAEtC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBL,QAAQ,EAAE;IACRI,MAAMA,CAAA,EAAG;MACP,OAAOA,MAAK;IACd;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,mBAAmB,EAAE;MACnBC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IAAEM;EAAK,CAAC,EAAE;IACrB,MAAMC,SAAQ,GAAIZ,YAAY,CAAC,CAAC;IAChC,MAAMa,MAAK,GAAIX,SAAS,CAAC,CAAC;IAE1B,MAAMY,SAAQ,GAAIf,QAAQ,CAAC,MAAMM,KAAK,CAACC,mBAAmB,CAAC;IAC3D,MAAMS,SAAQ,GAAIhB,QAAQ,CAAC,MAAOa,SAAS,CAACI,UAAS,GAAI,MAAK,GAAI,KAAM,CAAC;IAEzE,MAAMC,0BAAyB,GAAIA,CAAA,KAAM;MACvCN,IAAI,CAAC,YAAY,CAAC;IACpB;IAEA,MAAMO,gBAAe,GAAIA,CAAA,KAAM;MAC7B,IAAI,CAACN,SAAS,CAACI,UAAU,EAAE;QACzBC,0BAA0B,CAAC,CAAC;QAC5BJ,MAAM,CAACM,IAAI,CAAC,QAAQ,CAAC;MACvB,OAAO;QACL;QACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACrB;IACF;IAEA,OAAO;MACLP,SAAS;MACTC,SAAS;MACTE,0BAA0B;MAC1BC,gBAAgB;MAChBN,SAAS;MACTX;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}