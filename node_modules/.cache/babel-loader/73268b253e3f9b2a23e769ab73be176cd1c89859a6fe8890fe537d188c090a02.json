{"ast":null,"code":"import { formatDate } from \"@/utils/format\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { onMounted, ref } from \"vue\";\nexport default {\n  name: \"JobApplicationStatus\",\n  methods: {\n    formatDate\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const jopApplicationCount = ref(0);\n    const jobApplicationList = ref();\n    const fetchJopApplication = () => {\n      // todo 채용지원 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [{\n        postId: 1,\n        entId: 1,\n        postTitle: '2024년 하반기 시니어 개발자 모집',\n        entName: '우리 바운드 (주)',\n        jobName: '서비스',\n        postImg: require('@/assets/images/logo/company_sample.png'),\n        // 이미지 경로를 require로 수정\n        startDate: '2024-11-01',\n        endDate: '2024-11-15',\n        postState: 'ACTIVE'\n      }, {\n        postId: 1,\n        entId: 1,\n        postTitle: '2024년 하반기 시니어 개발자 모집',\n        entName: '우리 바운드 (주)',\n        jobName: '서비스',\n        postImg: require('@/assets/images/logo/company_sample.png'),\n        // 이미지 경로를 require로 수정\n        startDate: '2024-11-01',\n        endDate: '2024-11-15',\n        postState: 'ACTIVE'\n      }];\n      jobApplicationList.value = data;\n      jopApplicationCount.value = jobApplicationList.value.length;\n    };\n    onMounted(() => {\n      fetchJopApplication();\n    });\n    return {};\n  }\n};","map":{"version":3,"names":["formatDate","useRoute","useRouter","onMounted","ref","name","methods","setup","router","route","jopApplicationCount","jobApplicationList","fetchJopApplication","data","postId","entId","postTitle","entName","jobName","postImg","require","startDate","endDate","postState","value","length"],"sources":["/Users/sol/Desktop/fisa/wooribound-web/src/views/IndividualUser/JobApplicationStatus.vue"],"sourcesContent":["<script>\nimport {formatDate} from \"@/utils/format\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {onMounted, ref} from \"vue\";\n\nexport default {\n  name: \"JobApplicationStatus\",\n  methods: { formatDate },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n\n    const jopApplicationCount = ref(0);\n    const jobApplicationList = ref();\n\n    const fetchJopApplication = () => {\n      // todo 채용지원 리스트 API 구현 시 아래에 로직 구현 하기\n      // viewType이 career, new, all에 따라 데이터 불러오기\n\n      const data = [\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n        {\n          postId: 1,\n          entId: 1,\n          postTitle: '2024년 하반기 시니어 개발자 모집',\n          entName: '우리 바운드 (주)',\n          jobName: '서비스',\n          postImg: require('@/assets/images/logo/company_sample.png'), // 이미지 경로를 require로 수정\n          startDate: '2024-11-01',\n          endDate: '2024-11-15',\n          postState: 'ACTIVE',\n        },\n      ];\n\n      jobApplicationList.value = data;\n      jopApplicationCount.value = jobApplicationList.value.length;\n    }\n\n    onMounted(() => {\n      fetchJopApplication();\n    })\n    return {\n\n    };\n  }\n}\n</script>\n\n<template>\n  <main class=\"body\">\n    <div class=\"header\">지원 현황</div>\n    <div class=\"job-posting-wrap\">\n      <div class=\"job-posting-info\">{{ jopPostingCount }}건</div>\n      <div class=\"job-posting-list\" v-for=\"jobPosting in jobPostingList\" :key=\"jobPosting\">\n        <div class=\"job-posting-list-top\">\n          <div class=\"course-title\">{{ jobPosting.entName }}</div>\n          <div :class=\"['recruitment-phase', recruitmentPhaseClass(jobPosting.postState)]\">{{ recruitmentPhase(jobPosting.postState) }}</div>\n        </div>\n        <div class=\"course-subtitle\">{{ jobPosting.postTitle }}</div>\n        <div class=\"course-schedule\">\n          <div class=\"schedule-info\">{{ formatDate(new Date(jobPosting.startDate)) }} ~ {{ formatDate(new Date(jobPosting.endDate)) }}</div>\n          <img src=\"@/assets/images/icons/rightarrows.png\" class=\"right-arrow-icon\" alt=\"Right Arrow Icon\" @click=\"onMoveDetailPageClick(jobPosting.postId)\">\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<style scoped>\n.body {\n  flex: 1;                      /* 가변 영역, 헤더와 바텀 내비게이션을 제외한 나머지 공간 차지 */\n  padding: 20px;                /* 내부 여백 */\n  box-sizing: border-box;       /* 패딩을 포함한 크기 계산 */\n  background-color: #f8f9fa;    /* 배경색 */\n  overflow-y: auto;             /* 내용이 넘칠 경우 스크롤 가능 */\n}\n\n.header {\n  font-size: 24px;              /* 헤더 폰트 크기 */\n  font-weight: bold;            /* 헤더 두껍게 */\n  margin-bottom: 20px;          /* 아래쪽 여백 */\n}\n\n.job-posting-wrap {\n  margin-top: 10px;\n}\n\n.job-posting-info {\n  font-size: 20px;\n  font-weight: bold;\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.job-posting-list {\n  background-color: #D9D9D9;\n  border-radius: 15px;\n  padding: 15px;\n  color: #000000;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.job-posting-list-top {\n  display: flex;\n  justify-content: space-between; /* Aligns items on both ends */\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.course-title {\n  font-size: 18px;\n  margin-right: auto; /* Ensures it stays on the left */\n}\n\n.recruitment-phase {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 14px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  width: 70px;\n}\n\n/* 상태에 따른 배경색 */\n.phase-open {\n  background-color: #5B99C2;\n}\n\n.phase-in-progress {\n  background-color: #FF9800;\n}\n\n.phase-closed {\n  background-color: #686D76;\n}\n</style>"],"mappings":"AACA,SAAQA,UAAU,QAAO,gBAAgB;AACzC,SAAQC,QAAQ,EAAEC,SAAS,QAAO,YAAY;AAC9C,SAAQC,SAAS,EAAEC,GAAG,QAAO,KAAK;AAElC,eAAe;EACbC,IAAI,EAAE,sBAAsB;EAC5BC,OAAO,EAAE;IAAEN;EAAW,CAAC;EACvBO,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,SAAS,CAAC,CAAC;IAC1B,MAAMO,KAAI,GAAIR,QAAQ,CAAC,CAAC;IAExB,MAAMS,mBAAkB,GAAIN,GAAG,CAAC,CAAC,CAAC;IAClC,MAAMO,kBAAiB,GAAIP,GAAG,CAAC,CAAC;IAEhC,MAAMQ,mBAAkB,GAAIA,CAAA,KAAM;MAChC;MACA;;MAEA,MAAMC,IAAG,GAAI,CACX;QACEC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,CAAC;QACRC,SAAS,EAAE,sBAAsB;QACjCC,OAAO,EAAE,YAAY;QACrBC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEC,OAAO,CAAC,yCAAyC,CAAC;QAAE;QAC7DC,SAAS,EAAE,YAAY;QACvBC,OAAO,EAAE,YAAY;QACrBC,SAAS,EAAE;MACb,CAAC,EACD;QACET,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,CAAC;QACRC,SAAS,EAAE,sBAAsB;QACjCC,OAAO,EAAE,YAAY;QACrBC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEC,OAAO,CAAC,yCAAyC,CAAC;QAAE;QAC7DC,SAAS,EAAE,YAAY;QACvBC,OAAO,EAAE,YAAY;QACrBC,SAAS,EAAE;MACb,CAAC,CACF;MAEDZ,kBAAkB,CAACa,KAAI,GAAIX,IAAI;MAC/BH,mBAAmB,CAACc,KAAI,GAAIb,kBAAkB,CAACa,KAAK,CAACC,MAAM;IAC7D;IAEAtB,SAAS,CAAC,MAAM;MACdS,mBAAmB,CAAC,CAAC;IACvB,CAAC;IACD,OAAO,CAEP,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}